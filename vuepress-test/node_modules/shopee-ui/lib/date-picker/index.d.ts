import Vue from 'vue';
import { ShopeeUISize, ShopeeUIComponent } from '../../types/common';
import { ShopeeTimePickerProps } from './time-picker';

type RangeDate = {
  startDate: Date,
  endDate: Date
};
type DatePickerPanelType = 'year' | 'month' | 'date' | 'datetime';
type DaterangePickerPanelType = 'datetimerange' | 'daterange';
type DatePickerType = DatePickerPanelType | DaterangePickerPanelType | 'week';
type DatePickerFixed = 'start' | 'end' | false;
type ShortcutMethod = () => Date | RangeDate;
type FormatMethod = (date: Date) => string;

interface Shortcut {
  text?: string;
  value?: Date | RangeDate | ShortcutMethod;
  type?: DatePickerType;
}

export class DatePicker extends ShopeeUIComponent {
  // the value of date picker
  value: Date | RangeDate;

  // the type of date picker
  type: DatePickerType;

  // the placeholder of date picker input
  placeholder: string;

  // the size of date picker input
  size: ShopeeUISize;

  // whether date picker is disabled
  disabled: boolean;

  // whether date picker is clearable
  clearable: boolean;

  // the format of the picker, support with `fecha`
  format: string | FormatMethod;

  // the shortcuts config of date picker
  shortcuts: Shortcut[];

  // the function that return a Boolean value to disable the date or not
  disabledDate: (value: Date) => boolean;

  // the minimum of date that can be selected
  min: Date | ((selecting: RangeDate, section: RangeDate) => Date);

  // the maximum of date that can be selected
  max: Date | ((selecting: RangeDate, section: RangeDate) => Date);

  // which end of `value` if fixed, only effective when `type` contains `range`
  fixed: DatePickerFixed;

  // range separator, only effective when `type` contains `range`
  rangeSeparator: string;

  // the start of week, 0 stands for Sunday and 6 stands for Saturday
  startOfWeek: number;

  // whether show the date out of current calendar
  showOverflowDate: boolean;

  // the props to pass to time picker
  timePickerProps: ShopeeTimePickerProps;

  // the placement of popper
  placement: string;

  // custom class of popper
  popperClass: string;

  // whether popper is flippable
  popperFlippable: boolean;

  // whether append picker popper to body
  appendToBody: boolean;
}

export class DatePickerPanel extends Vue {
  value: Date;

  type: DatePickerPanelType | 'week';

  disabledDate: (value: Date) => boolean;

  min: Date;

  max: Date;

  startOfWeek: number;

  showOverflowDate: boolean;

  timePickerProps: ShopeeTimePickerProps;
}

export class DaterangePickerPanel extends Vue {
  value: RangeDate;

  type: DaterangePickerPanelType;

  disabledDate: (value: Date) => boolean;

  min: Date | ((selecting: RangeDate, section: RangeDate) => Date);

  max: Date | ((selecting: RangeDate, section: RangeDate) => Date);

  fixed: DatePickerFixed;

  startOfWeek: number;

  showOverflowDate: boolean;

  timePickerProps: ShopeeTimePickerProps;
}

export default DatePicker;
