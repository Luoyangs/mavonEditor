import Vue from 'vue';
import ShopeeRadio from '../index';
import { destroyInstance, createElement } from '@/test/utils';

Vue.use(ShopeeRadio);

describe('radio-group.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  it('should render correct', () => {
    vm = new Vue({
      template: `
        <shopee-radio-group>
          <shopee-radio>Label1</shopee-radio>
          <shopee-radio>Label2</shopee-radio>
          <shopee-radio>Label3</shopee-radio>
        </shopee-radio-group>
      `
    }).$mount(createElement());
    expect(vm.$el.classList.contains('shopee-radio-group')).to.be.true;
  });

  it('should render correct size', () => {
    vm = new Vue({
      template: `
        <shopee-radio-group size="large">
          <shopee-radio>Label1</shopee-radio>
          <shopee-radio>Label2</shopee-radio>
          <shopee-radio>Label3</shopee-radio>
        </shopee-radio-group>
      `
    }).$mount(createElement());
    expect(vm.$el.classList.contains('shopee-radio-group--large')).to.be.true;
  });

  it('should render correct layout', () => {
    vm = new Vue({
      template: `
        <shopee-radio-group layout="vertical">
          <shopee-radio>Label1</shopee-radio>
          <shopee-radio>Label2</shopee-radio>
          <shopee-radio>Label3</shopee-radio>
        </shopee-radio-group>
      `
    }).$mount(createElement());
    expect(vm.$el.classList.contains('vertical')).to.be.true;
  });

  it('should render correct when disabled', () => {
    vm = new Vue({
      template: `
        <shopee-radio-group disabled>
          <shopee-radio>Label1</shopee-radio>
          <shopee-radio>Label2</shopee-radio>
          <shopee-radio>Label3</shopee-radio>
        </shopee-radio-group>
      `
    }).$mount(createElement());
    let radioElems = vm.$el.querySelectorAll('.shopee-radio');
    let disabed = true;
    for (let i = 0; i < radioElems.length; i++) {
      disabed = disabed && radioElems[i].classList.contains('disabled');
    }
    expect(disabed).to.be.true;
  });

  it('should check correct radio in radio-group', done => {
    vm = new Vue({
      template: `
        <shopee-radio-group v-model="groupValue">
          <shopee-radio-button ref="a" value=1>Label1</shopee-radio-button>
          <shopee-radio-button ref="b" value=2>Label2</shopee-radio-button>
          <shopee-radio-button ref="c" value=3>Label3</shopee-radio-button>
        </shopee-radio-group>
      `,
      data() {
        return {
          groupValue: '1'
        };
      }
    }).$mount(createElement());
    expect(vm.$refs.a.model).to.equal('1');
    expect(vm.$refs.b.model).to.equal('1');
    expect(vm.$refs.c.model).to.equal('1');
    setTimeout(() => {
      vm.$refs.b.$el.click();
      setTimeout(() => {
        expect(vm.groupValue).to.equal('2');
        done();
      });
    });
  });


  it('should check correct radio in radio-group when some radio rendered with v-for', done => {
    vm = new Vue({
      template: `
        <shopee-radio-group v-model="groupValue">
          <shopee-radio-button ref="a" value=1>Label1</shopee-radio-button>
          <template v-for="radio in radios">
            <shopee-radio-button ref="b" :value="radio.value">{{radio.label}}</shopee-radio-button>
          </template>
        </shopee-radio-group>
      `,
      data() {
        return {
          groupValue: '3',
          radios: [{
            value: '2',
            label: 'Label2'
          }, {
            value: '3',
            label: 'Label3'
          }]
        };
      }
    }).$mount(createElement());
    expect(vm.$refs.a.model).to.equal('3');
    expect(vm.$refs.b[0].model).to.equal('3');
    expect(vm.$refs.b[1].model).to.equal('3');
    setTimeout(() => {
      vm.radios.shift();
      setTimeout(() => {
        expect(vm.$refs.a.model).to.equal('3');
        expect(vm.$refs.b[0].model).to.equal('3');
        vm.$refs.a.$el.click();
        setTimeout(() => {
          expect(vm.groupValue).to.equal('1');
          done();
        });
      });
    });
  });

  it('should render correct when fixWidth', done => {
    vm = new Vue({
      template: `
        <shopee-radio-group :fix-width="100">
          <shopee-radio>Label1</shopee-radio>
          <shopee-radio>Label2</shopee-radio>
          <shopee-radio>Label3</shopee-radio>
        </shopee-radio-group>
      `
    }).$mount(createElement());
    setTimeout(() => {
      const radioElems = vm.$el.querySelectorAll('.shopee-radio__label');
      const fixWidth = parseInt(radioElems[0].style.width) === 100;
      expect(fixWidth).to.be.true;
      done();
    });
  });
});
