import Vue from 'vue';
import fecha from 'fecha';
import ShopeeDatePicker from '../index';
import { createInstance, destroyInstance, createElement, triggerSVGClick } from '@/test/utils';

Vue.use(ShopeeDatePicker);

const createDatePicker = (type, props) => {
  props = props || {};
  props.type = type;
  return createInstance(ShopeeDatePicker, props, true);
};

const querySelectorFromStartPicker = (vm, query) => {
  return vm.$el.querySelectorAll('.shopee-daterange-picker-panel__body-left ' + query);
};

const querySelectorFromEndPicker = (vm, query) => {
  return vm.$el.querySelectorAll('.shopee-daterange-picker-panel__body-right ' + query);
};

describe('daterange-picker', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  describe('daterange', () => {
    it('should render correct date range', () => {
      vm = createDatePicker('daterange', {
        value: {
          startDate: new Date(),
          endDate: new Date()
        }
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(new Date(), 'DD/MM/YYYY') + ' â€“ ' + fecha.format(new Date(), 'DD/MM/YYYY'));
    });

    it('select range', done => {
      vm = new Vue({
        template: '<shopee-date-picker type="daterange" ref="picker" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: {
              startDate: new Date(2017, 7, 28),
              endDate: new Date(2017, 8, 20)
            }
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.picker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-daterange-picker-panel__body-left .shopee-date-table__row .shopee-date-table__cell')[2].click();
        setTimeout(() => {
          popper.$el.querySelectorAll('.shopee-daterange-picker-panel__body-right .shopee-date-table__row .shopee-date-table__cell')[7].click();
          setTimeout(() => {
            expect(vm.value.startDate.getDate()).to.equal(1);
            expect(vm.value.endDate.getDate()).to.equal(3);
            done();
          });
        }, 100);
      });
    });

    it('fixed range', done => {
      vm = new Vue({
        template: '<shopee-date-picker type="daterange" ref="picker" v-model="value" fixed="start"></shopee-date-picker>',
        data() {
          return {
            value: {
              startDate: new Date(2017, 7, 28),
              endDate: new Date(2017, 8, 20)
            }
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.picker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-daterange-picker-panel__body-right .shopee-date-table__row .shopee-date-table__cell')[7].click();
        setTimeout(() => {
          expect(vm.value.startDate.getDate()).to.equal(28);
          expect(vm.value.endDate.getDate()).to.equal(3);
          done();
        });
      });
    });

    it('prev start year', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[0]);
      setTimeout(() => {
        expect(vm.$refs.picker.left.year).to.equal(new Date().getFullYear() - 1);
        done();
      });
    });

    it('prev start month', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[1]);
      setTimeout(() => {
        expect(vm.$refs.picker.left.month).to.equal((new Date().getMonth() - 1 + 12) % 12);
        done();
      });
    });

    it('next start month', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[0]);
      setTimeout(() => {
        expect(vm.$refs.picker.left.month).to.equal(new Date().getMonth());
        triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[0]);
        setTimeout(() => {
          triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[0]);
          setTimeout(() => {
            expect(vm.$refs.picker.left.month).to.equal((new Date().getMonth() + 1) % 12);
            done();
          });
        });
      });
    });

    it('next start year', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[1]);
      setTimeout(() => {
        expect(vm.$refs.picker.left.year).to.equal(new Date().getFullYear());
        triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[1]);
        setTimeout(() => {
          triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[1]);
          setTimeout(() => {
            expect(vm.$refs.picker.left.year).to.equal(new Date().getFullYear() + 1);
            done();
          });
        });
      });
    });

    it('prev end year', done => {
      vm = createDatePicker('daterange');
      const currentEndYear = vm.$refs.picker.right.year;
      triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[0]);
      setTimeout(() => {
        expect(vm.$refs.picker.right.year).to.equal(currentEndYear);
        triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[0]);
          setTimeout(() => {
            expect(vm.$refs.picker.right.year).to.equal(currentEndYear - 1);
            done();
          });
        });
      });
    });

    it('prev end month', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[1]);
      setTimeout(() => {
        expect(vm.$refs.picker.right.month).to.equal((new Date().getMonth() + 1) % 12);
        triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[1]);
        setTimeout(() => {
          triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[1]);
          setTimeout(() => {
            expect(vm.$refs.picker.right.month).to.equal(new Date().getMonth());
            done();
          });
        });
      });
    });

    it('next end month', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[0]);
      setTimeout(() => {
        expect(vm.$refs.picker.right.month).to.equal((new Date().getMonth() + 2) % 12);
        done();
      });
    });

    it('next end year', done => {
      vm = createDatePicker('daterange');
      const currentEndYear = vm.$refs.picker.right.year;
      triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[1]);
      setTimeout(() => {
        expect(vm.$refs.picker.right.year).to.equal(currentEndYear + 1);
        done();
      });
    });

    it('prev start year in month table', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__label')[0]);
      setTimeout(() => {
        triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.left.year).to.equal(new Date().getFullYear() - 1);
          done();
        });
      });
    });

    it('next start year in month table', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__label')[0]);
      setTimeout(() => {
        triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[1]);
        setTimeout(() => {
          expect(vm.$refs.picker.left.year).to.equal(new Date().getFullYear());
          triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[1]);
          setTimeout(() => {
            triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[1]);
            setTimeout(() => {
              expect(vm.$refs.picker.left.year).to.equal(new Date().getFullYear() + 1);
              done();
            });
          });
        });
      });
    });

    it('prev end year in month table', done => {
      vm = createDatePicker('daterange');
      const currentEndYear = vm.$refs.picker.right.year;
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.right.year).to.equal(currentEndYear);
          triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[0]);
          setTimeout(() => {
            triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[0]);
            setTimeout(() => {
              expect(vm.$refs.picker.right.year).to.equal(currentEndYear - 1);
              done();
            });
          });
        });
      });
    });

    it('next end year in month table', done => {
      vm = createDatePicker('daterange');
      const currentEndYear = vm.$refs.picker.right.year;
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[1]);
        setTimeout(() => {
          expect(vm.$refs.picker.right.year).to.equal(currentEndYear + 1);
          done();
        });
      });
    });

    it('next start year range', done => {
      vm = createDatePicker('daterange', {
        value: {
          startDate: new Date(2017, 7, 1),
          endDate: new Date(2028, 7, 1),
        }
      });
      const currentStartYearRange = vm.$refs.picker.left.yearRange;
      querySelectorFromStartPicker(vm, '.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__next')[1]);
        setTimeout(() => {
          expect(vm.$refs.picker.left.yearRange.start).to.equal(currentStartYearRange.start + 10);
          expect(vm.$refs.picker.left.yearRange.end).to.equal(currentStartYearRange.end + 10);
          done();
        });
      });
    });

    it('prev start year range', done => {
      vm = createDatePicker('daterange');
      const currentStartYearRange = vm.$refs.picker.left.yearRange;
      querySelectorFromStartPicker(vm, '.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.left.yearRange.start).to.equal(currentStartYearRange.start - 10);
          expect(vm.$refs.picker.left.yearRange.end).to.equal(currentStartYearRange.end - 10);
          done();
        });
      });
    });

    it('next end year range', done => {
      vm = createDatePicker('daterange');
      const currentEndYearRange = vm.$refs.picker.right.yearRange;
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__next')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.right.yearRange.start).to.equal(currentEndYearRange.start + 10);
          expect(vm.$refs.picker.right.yearRange.end).to.equal(currentEndYearRange.end + 10);
          done();
        });
      });
    });

    it('prev end year range', done => {
      vm = createDatePicker('daterange', {
        value: {
          startDate: new Date(2017, 7, 1),
          endDate: new Date(2028, 7, 1),
        }
      });
      const currentEndYearRange = vm.$refs.picker.right.yearRange;
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.right.yearRange.start).to.equal(currentEndYearRange.start - 10);
          expect(vm.$refs.picker.right.yearRange.end).to.equal(currentEndYearRange.end - 10);
          done();
        });
      });
    });

    it('start year select', done => {
      vm = createDatePicker('daterange');
      const currentStartYearRange = vm.$refs.picker.left.yearRange;
      querySelectorFromStartPicker(vm, '.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        querySelectorFromStartPicker(vm, '.shopee-year-table__col')[0].click();
        setTimeout(() => {
          expect(vm.$refs.picker.left.view).to.equal('date');
          expect(vm.$refs.picker.left.year).to.equal(currentStartYearRange.start);
          done();
        });
      });
    });

    it('start month select', done => {
      vm = createDatePicker('daterange');
      triggerSVGClick(querySelectorFromStartPicker(vm, '.shopee-picker-header__label')[0]);
      setTimeout(() => {
        querySelectorFromStartPicker(vm, '.shopee-month-table__col')[0].click();
        setTimeout(() => {
          expect(vm.$refs.picker.left.view).to.equal('date');
          expect(vm.$refs.picker.left.month).to.equal(0);
          done();
        });
      });
    });

    it('end year select', done => {
      vm = createDatePicker('daterange');
      const currentEndYearRange = vm.$refs.picker.right.yearRange;
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        if (vm.$refs.picker.right.year > vm.$refs.picker.left.year) {
          querySelectorFromEndPicker(vm, '.shopee-year-table__col')[9].click();
          setTimeout(() => {
            expect(vm.$refs.picker.right.view).to.equal('date');
            expect(vm.$refs.picker.right.year).to.equal(currentEndYearRange.start + 9);
            done();
          });
        } else {
          querySelectorFromEndPicker(vm, '.shopee-year-table__col')[9].click();
          setTimeout(() => {
            expect(vm.$refs.picker.right.view).to.equal('date');
            expect(vm.$refs.picker.right.year).to.equal(currentEndYearRange.start + 9);
            done();
          });
        }
      });
    });

    it('end month select', done => {
      vm = createDatePicker('daterange');
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        querySelectorFromEndPicker(vm, '.shopee-month-table__col')[11].click();
        setTimeout(() => {
          expect(vm.$refs.picker.right.view).to.equal('date');
          expect(vm.$refs.picker.right.month).to.equal(11);
          done();
        });
      });
    });

    it('can not select end month that before start month', done => {
      vm = createDatePicker('daterange');
      querySelectorFromEndPicker(vm, '.shopee-picker-header__label')[0].click();
      if (vm.$refs.picker.right.year > vm.$refs.picker.left.year) {
        const year = vm.$refs.picker.right.year;
        setTimeout(() => {
          triggerSVGClick(querySelectorFromEndPicker(vm, '.shopee-picker-header__prev')[0]);
          setTimeout(() => {
            expect(vm.$refs.picker.right.year).to.equal(year);
            done();
          });
        });
      } else {
        setTimeout(() => {
          querySelectorFromEndPicker(vm, '.shopee-month-table__col')[new Date().getMonth()].click();
          setTimeout(() => {
            expect(vm.$refs.picker.right.view).to.equal('month');
            done();
          });
        });
      }
    });

    it('shortcuts:normal', done => {
      let startDate = new Date();
      let endDate = new Date(new Date().getTime() + 30 * 24 * 60 * 60000);
      vm = new Vue({
        template: '<shopee-date-picker type="daterange" ref="picker" :shortcuts="shortcuts" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: undefined,
            shortcuts: [{
              text: 'TODAY',
              value: {
                startDate: startDate,
                endDate: endDate
              }
            }]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelectorAll('.shopee-date-shortcut-item')[0].click();
      setTimeout(() => {
        expect(vm.value.startDate.getTime()).to.equal(startDate.getTime());
        expect(vm.value.endDate.getTime()).to.equal(endDate.getTime());
        done();
      });
    });

    it('shortcuts:function', done => {
      let startDate = new Date();
      let endDate = new Date(new Date().getTime() + 30 * 24 * 60 * 60000);
      vm = new Vue({
        template: '<shopee-date-picker type="daterange" ref="picker" :shortcuts="shortcuts" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: undefined,
            shortcuts: [{
              text: 'TODAY',
              value() {
                return {
                  startDate: startDate,
                  endDate: endDate
                };
              }
            }]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelectorAll('.shopee-date-shortcut-item')[0].click();
      setTimeout(() => {
        expect(vm.value.startDate.getTime()).to.equal(startDate.getTime());
        expect(vm.value.endDate.getTime()).to.equal(endDate.getTime());
        done();
      });
    });
  });
  describe('datetimerange', () => {
    it('should render correct datetime range', () => {
      vm = createDatePicker('datetimerange', {
        value: {
          startDate: new Date(),
          endDate: new Date()
        }
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(new Date(), 'DD/MM/YYYY HH:mm') + ' â€“ ' + fecha.format(new Date(), 'DD/MM/YYYY HH:mm'));
    });

    it('select datetime range', done => {
      vm = new Vue({
        template: '<shopee-date-picker type="datetimerange" ref="dateTimePicker" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: undefined
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const picker = vm.$refs.dateTimePicker.$refs.picker;
      setTimeout(() => {
        querySelectorFromStartPicker(picker, '.shopee-time-picker__hour-spinner ul li')[1].click();
        querySelectorFromStartPicker(picker, '.shopee-time-picker__minute-spinner ul li')[1].click();
        querySelectorFromStartPicker(picker, '.shopee-date-table__row .shopee-date-table__cell')[7].click();
        setTimeout(() => {
          querySelectorFromEndPicker(picker, '.shopee-date-table__row .shopee-date-table__cell')[7].click();
          querySelectorFromEndPicker(picker, '.shopee-time-picker__hour-spinner ul li')[3].click();
          querySelectorFromEndPicker(picker, '.shopee-time-picker__minute-spinner ul li')[1].click();
          setTimeout(() => {
            picker.$el.querySelector('.shopee-button').click();
            setTimeout(() => {
              expect(vm.value.startDate.getDate()).to.equal(+querySelectorFromStartPicker(picker, '.shopee-date-table__row .shopee-date-table__cell')[7].textContent);
              expect(vm.value.startDate.getHours()).to.equal(1);
              expect(vm.value.startDate.getMinutes()).to.equal(1);
              expect(vm.value.endDate.getDate()).to.equal(+querySelectorFromEndPicker(picker, '.shopee-date-table__row .shopee-date-table__cell')[7].textContent);
              expect(vm.value.endDate.getHours()).to.equal(3);
              expect(vm.value.endDate.getMinutes()).to.equal(1);
              done();
            });
          });
        });
      });
    });
  });
});
