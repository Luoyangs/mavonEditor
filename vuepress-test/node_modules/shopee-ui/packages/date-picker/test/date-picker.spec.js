import Vue from 'vue';
import fecha from 'fecha';
import ShopeeDatePicker from '../index';
import { createInstance, destroyInstance, createElement, triggerSVGClick } from '@/test/utils';

Vue.use(ShopeeDatePicker);

const createDatePicker = (type, props) => {
  props = props || {};
  props.type = type;
  return createInstance(ShopeeDatePicker, props, true);
};

describe('date-picker.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  describe('basic', () => {
    it('should render correctly:date', () => {
      vm = createDatePicker();
      const popper = vm.$refs.popper;
      expect(popper.$el.querySelector('.shopee-date-picker-panel')).to.exist;
    });

    it('should render correctly:datetime', () => {
      vm = createDatePicker('datetime');
      const popper = vm.$refs.popper;
      expect(popper.$el.querySelector('.shopee-date-picker-panel')).to.exist;
    });

    it('should render correctly:daterange', () => {
      vm = createDatePicker('daterange');
      const popper = vm.$refs.popper;
      expect(popper.$el.querySelector('.shopee-daterange-picker-panel')).to.exist;
    });

    it('should render correctly:datetimerange', () => {
      vm = createDatePicker('datetimerange');
      const popper = vm.$refs.popper;
      expect(popper.$el.querySelector('.shopee-daterange-picker-panel')).to.exist;
    });

    it('should show the picker when input clicked', done => {
      vm = createDatePicker('date');
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.popper;
      setTimeout(() => {
        expect(popper.$el.style.display).to.equal('');
        done();
      }, 100);
    });

    it('should hide the picker when click outside picker', done => {
      vm = createDatePicker('date');
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.popper;
      setTimeout(() => {
        document.body.click();
        setTimeout(() => {
          expect(popper.$el.style.display).to.equal('none');
          done();
        }, 300);
      }, 100);
    });
  });

  describe('date', () => {
    it('should render correct date', () => {
      vm = createDatePicker('date', {
        value: new Date()
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(new Date(), 'DD/MM/YYYY'));
    });

    it('should render correct with date-cell slot', done => {
      vm = new Vue({
        template: `<shopee-date-picker ref="datePicker" v-model="value" :disabled-date="disabledDate">
                    <template slot="dateCell" slot-scope="props">{{!props.disabled ? props.date.getDate() : 'X'}}</template>
                  </shopee-date-picker>`,
        data() {
          return {
            value: new Date(2017, 7, 28),
          };
        },
        methods: {
          disabledDate(value) {
            return new Date(value).getMonth() < new Date(this.value).getMonth();
          }
        }
      }).$mount(createElement());
      expect(vm.$refs.datePicker.$refs.input.value).to.equal('28/08/2017');
      setTimeout(() => {
        const popper = vm.$refs.datePicker.$refs.popper;
        const firstCell = popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[0];
        const thirdCell = popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[2];
        expect(firstCell.querySelector('span').innerText).to.equal('X');
        expect(thirdCell.querySelector('span').innerText).to.equal('1');
        done();
      });
    });

    it('select date', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 7, 28)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[2].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getDate()).to.equal(1);
          done();
        });
      });
    });

    it('select date of next month', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" show-overflow-date v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 7, 28)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[34].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getDate()).to.equal(2);
          expect(vm.value.getMonth()).to.equal(8);
          done();
        });
      });
    });

    it('select date of last month', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" show-overflow-date v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 7, 28)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[0].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getDate()).to.equal(30);
          expect(vm.value.getMonth()).to.equal(6);
          done();
        });
      });
    });

    it('prev year', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__prev')[0]);
      setTimeout(() => {
        expect(vm.$refs.picker.year).to.equal(new Date().getFullYear() - 1);
        done();
      });
    });

    it('prev month', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__prev')[1]);
      setTimeout(() => {
        expect(vm.$refs.picker.month).to.equal((new Date().getMonth() - 1 + 12) % 12);
        done();
      });
    });

    it('next month', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__next')[0]);
      setTimeout(() => {
        expect(vm.$refs.picker.month).to.equal((new Date().getMonth() + 1) % 12);
        done();
      });
    });

    it('next year', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__next')[1]);
      setTimeout(() => {
        expect(vm.$refs.picker.year).to.equal(new Date().getFullYear() + 1);
        done();
      });
    });

    it('next year in month table', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__next')[1]);
        setTimeout(() => {
          expect(vm.$refs.picker.year).to.equal(new Date().getFullYear() + 1);
          done();
        });
      });
    });

    it('prev year in month table', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.year).to.equal(new Date().getFullYear() - 1);
          done();
        });
      });
    });

    it('next year range', done => {
      vm = createDatePicker('date');
      const currentYear = new Date().getFullYear();
      const currentStartYearRange = {
        start: currentYear - currentYear % 10,
        end: currentYear - currentYear % 10 + 9
      };
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__next')[1]);
        setTimeout(() => {
          expect(vm.$refs.picker.yearRange.start).to.equal(currentStartYearRange.start + 10);
          expect(vm.$refs.picker.yearRange.end).to.equal(currentStartYearRange.end + 10);
          done();
        });
      });
    });

    it('prev year range', done => {
      vm = createDatePicker('date');
      const currentYear = new Date().getFullYear();
      const currentStartYearRange = {
        start: currentYear - currentYear % 10,
        end: currentYear - currentYear % 10 + 9
      };
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        triggerSVGClick(popper.$el.querySelectorAll('.shopee-picker-header__prev')[0]);
        setTimeout(() => {
          expect(vm.$refs.picker.yearRange.start).to.equal(currentStartYearRange.start - 10);
          expect(vm.$refs.picker.yearRange.end).to.equal(currentStartYearRange.end - 10);
          done();
        });
      });
    });

    it('year label clicked', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        expect(vm.$refs.picker.view).to.equal('year');
        done();
      });
    });

    it('month label clicked', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        expect(vm.$refs.picker.view).to.equal('month');
        done();
      });
    });

    it('year select', done => {
      vm = createDatePicker('date');
      const yearRange = vm.$refs.picker.yearRange;
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[1].click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-year-table__col')[0].click();
        setTimeout(() => {
          expect(vm.$refs.picker.view).to.equal('date');
          expect(vm.$refs.picker.year).to.equal(yearRange.start);
          done();
        });
      });
    });

    it('month select', done => {
      vm = createDatePicker('date');
      const popper = vm.$refs.popper;
      popper.$el.querySelectorAll('.shopee-picker-header__label')[0].click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-month-table__col')[0].click();
        setTimeout(() => {
          expect(vm.$refs.picker.view).to.equal('date');
          expect(vm.$refs.picker.month).to.equal(0);
          done();
        });
      });
    });

    it('format function', done => {
      vm = createDatePicker('date', {
        value: new Date(2017, 7, 1),
        format(date) {
          return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;
        }
      });
      setTimeout(() => {
        expect(vm.$refs.input.value).to.equal('2017/8/1');
        done();
      });
    });

    it('disabled date', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" :min="min" :max="max" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 7, 28),
            min: new Date(new Date().getTime() - 3 * 24 * 60 * 60000),
            max: new Date(new Date().getTime() + 3 * 24 * 60 * 60000)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[2].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.true;
          expect(vm.value.getDate()).to.equal(28);
          done();
        });
      });
    });

    it('shortcuts:normal', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" :shortcuts="shortcuts" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 8, 28),
            shortcuts: [{
              text: 'TODAY',
              value: new Date()
            }]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-shortcut-item')[0].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getMonth()).to.equal(new Date().getMonth());
          done();
        });
      });
    });

    it('shortcuts:function', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" :shortcuts="shortcuts" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 8, 28),
            shortcuts: [{
              text: 'TODAY',
              value() {
                return new Date();
              }
            }]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-shortcut-item')[0].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getMonth()).to.equal(new Date().getMonth());
          done();
        });
      });
    });
  });

  describe('datetime', () => {
    it('should render correct datetime', () => {
      vm = createDatePicker('datetime', {
        value: new Date()
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(new Date(), 'DD/MM/YYYY HH:mm'));
    });

    it('select datetime', done => {
      vm = new Vue({
        template: '<shopee-date-picker type="datetime" ref="datePicker" v-model="value"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 7, 28)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[2].click();
        popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner ul li')[1].click();
        popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner ul li')[1].click();
        setTimeout(() => {
          popper.$el.querySelector('.shopee-button').click();
          setTimeout(() => {
            expect(vm.$refs.datePicker.visible).to.be.false;
            expect(vm.value.getDate()).to.equal(1);
            expect(vm.value.getHours()).to.equal(1);
            expect(vm.value.getMinutes()).to.equal(1);
            done();
          });
        });
      });
    });
  });

  describe('year', () => {
    it('should render correct year', () => {
      vm = createDatePicker('year', {
        value: new Date()
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(new Date(), 'YYYY'));
    });

    it('select year', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" v-model="value" type="year"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 8, 28)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-year-table__col')[0].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getFullYear()).to.equal(2010);
          done();
        });
      });
    });
  });

  describe('month', () => {
    it('should render correct month', () => {
      vm = createDatePicker('month', {
        value: new Date()
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(new Date(), 'MM/YYYY'));
    });

    it('select month', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" v-model="value" type="month"></shopee-date-picker>',
        data() {
          return {
            value: new Date(2017, 8, 28)
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-month-table__col')[0].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.getMonth()).to.equal(0);
          done();
        });
      });
    });
  });

  describe('week', () => {
    it('select week', done => {
      vm = new Vue({
        template: '<shopee-date-picker ref="datePicker" v-model="value" type="week"></shopee-date-picker>',
        data() {
          return {
            value: {
              startDate: new Date(2018, 0, 7),
              endDate: new Date(2018, 0, 13)
            }
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.datePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-date-table__row .shopee-date-table__cell')[21].click();
        setTimeout(() => {
          expect(vm.$refs.datePicker.visible).to.be.false;
          expect(vm.value.startDate.getDate()).to.equal(21);
          expect(vm.value.endDate.getDate()).to.equal(27);
          done();
        });
      });
    });
  });
});
