import Vue from 'vue';
import ShopeeCascader from '../index';
import { destroyInstance, createElement, triggerSVGClick, dispatchKeyboardEvent } from '@/test/utils';

Vue.use(ShopeeCascader);

const longText = 'long text  long text long text long text long text long text long text long text long text';
const options = [{
  label: '1',
  value: 1,
  children: [{
    label: '2',
    value: '1a'
  }, {
    label: '2',
    value: '1b'
  }]
}, {
  label: '1',
  value: 2
}, {
  label: '1',
  value: 3,
  children: [{
    label: '3',
    value: '3a',
    children: [{
      label: '3',
      value: '3aa'
    }, {
      label: '3',
      value: '3ab'
    }]
  }, {
    label: '3',
    value: longText
  }]
}];


const createSimpleCascader = (props = {}) => {
  return new Vue({
    template: '<shopee-cascader ref="cascader" v-model="value" :options="options" v-bind="props"></shopee-cascader>',
    data() {
      return {
        props,
        options,
        value: []
      };
    }
  }).$mount(createElement());
};

const createCascaderPanel = (props = {}) => {
  return new Vue({
    template: '<shopee-cascader-panel ref="cascaderPanel" v-model="value" :options="options" v-bind="props"></shopee-cascader-panel>',
    data() {
      return {
        props,
        options,
        value: []
      };
    }
  }).$mount(createElement());
};

describe('cascader.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  it('should render correct', () => {
    vm = createSimpleCascader();
    expect(vm.$el.classList.contains('shopee-cascader')).to.be.true;
  });

  it('should select correct option[level1]', done => {
    vm = createSimpleCascader();
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[1].click();
      setTimeout(() => {
        expect(vm.$data.value.length).to.equals(1);
        expect(vm.$data.value[0]).to.equals(2);
        done();
      });
    });
  });

  it('should select correct option[level2]', done => {
    vm = createSimpleCascader();
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[0].click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-cascader-menu')[1].querySelector('.shopee-cascader-menu__item').click();
        setTimeout(() => {
          expect(vm.$data.value.length).to.equals(2);
          expect(vm.$data.value[1]).to.equals('1a');
          done();
        });
      });
    });
  });

  it('change-on-select', done => {
    vm = createSimpleCascader({changeOnSelect: true});
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[0].click();
      setTimeout(() => {
        expect(vm.$data.value.length).to.equals(1);
        expect(vm.$data.value[0]).to.equals(1);
        done();
      });
    });
  });

  it('disabled', done => {
    vm = createSimpleCascader({disabled: true});
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      expect(popper.$el.style.display).to.equals('none');
      done();
    });
  });

  it('clearable', done => {
    vm = createSimpleCascader({clearable: true});
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[1].click();
      setTimeout(() => {
        triggerSVGClick(vm.$el.querySelector('.shopee-selector__clear-btn'));
        setTimeout(() => {
          expect(vm.$data.value.length).to.equals(0);
          done();
        });
      });
    });
  });

  it('format', done => {
    vm = createSimpleCascader({format: options => {return options.map(option => option.label).join('/');}});
    vm.$el.querySelector('.shopee-selector').click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[0].click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-cascader-menu')[1].querySelector('.shopee-cascader-menu__item').click();
        setTimeout(() => {
          expect(vm.$el.querySelector('.shopee-selector__inner').innerText).to.equals('1/2');
          done();
        });
      });
    });
  });

  it('should reset cascader menu when low level is selected', done => {
    vm = createSimpleCascader();
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[2].click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-cascader-menu')[1].querySelector('.shopee-cascader-menu__item').click();
        setTimeout(() => {
          popper.$el.querySelectorAll('.shopee-cascader-menu')[2].querySelector('.shopee-cascader-menu__item').click();
          // select ['3', '3a', '3aa'] finished
          setTimeout(() => {
            vm.$el.querySelectorAll('.shopee-selector')[0].click();
            setTimeout(() => {
              popper.$el.querySelectorAll('.shopee-cascader-menu__item')[0].click();
              setTimeout(() => {
                expect(popper.$el.querySelectorAll('.shopee-cascader-menu').length).to.equals(2);
                done();
              }, 500);
            });
          });
        });
      });
    });
  });

  it('keyboard support', done => {
    vm = createSimpleCascader();
    let input = vm.$el.querySelectorAll('.shopee-selector')[0];
    // down
    dispatchKeyboardEvent(input, 40);
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      expect(popper.$el.style.display).to.equals('');
      // down
      dispatchKeyboardEvent(input, 40);
      expect(vm.$refs.cascader.hoverLevel).to.equal(0);
      expect(vm.$refs.cascader.hoverIndex).to.equal(0);
      // next
      dispatchKeyboardEvent(input, 39);
      expect(vm.$refs.cascader.hoverLevel).to.equal(1);
      expect(vm.$refs.cascader.hoverIndex).to.equal(0);
      // up
      dispatchKeyboardEvent(input, 38);
      expect(vm.$refs.cascader.hoverLevel).to.equal(1);
      expect(vm.$refs.cascader.hoverIndex).to.equal(1);
      // prev
      dispatchKeyboardEvent(input, 37);
      expect(vm.$refs.cascader.hoverLevel).to.equal(0);
      expect(vm.$refs.cascader.hoverIndex).to.equal(0);
      // down
      dispatchKeyboardEvent(input, 40);
      expect(vm.$refs.cascader.hoverLevel).to.equal(0);
      expect(vm.$refs.cascader.hoverIndex).to.equal(1);
      // enter
      dispatchKeyboardEvent(input, 13);
      expect(vm.value[0]).to.equal(2);
      done();
    }, 500);
  });

  it('option disabled', done => {
    options[1].disabled = true;
    vm = createSimpleCascader();
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[1].click();
      setTimeout(() => {
        expect(vm.$data.value.length).to.equals(0);
        done();
      });
    });
  });

  it('support max line equal 2', done => {
    vm = createSimpleCascader({maxLine: 2});
    vm.$el.querySelector('.shopee-selector').click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[2].click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-cascader-menu')[1].querySelectorAll('.shopee-cascader-menu__item')[1].click();
        setTimeout(() => {
          expect(vm.$el.querySelector('.shopee-selector__inner').className).to.include('line-clamp--2');
          expect(vm.$data.value[1]).to.equals(longText);
          done();
        });
      });
    });
  });

  it('trigger hover', done => {
    vm = createSimpleCascader({
      trigger: 'hover'
    });
    vm.$el.querySelectorAll('.shopee-selector')[0].click();
    const popper = vm.$refs.cascader.$refs.popper;
    setTimeout(() => {
      popper.$el.querySelectorAll('.shopee-cascader-menu__item')[2].dispatchEvent(new Event('mouseenter'));
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-cascader-menu')[1].querySelector('.shopee-cascader-menu__item').dispatchEvent(new Event('mouseenter'));
        setTimeout(() => {
          popper.$el.querySelectorAll('.shopee-cascader-menu')[2].querySelector('.shopee-cascader-menu__item').dispatchEvent(new Event('mouseenter'));
          popper.$el.querySelectorAll('.shopee-cascader-menu')[2].querySelector('.shopee-cascader-menu__item').click();
          // select ['3', '3a', '3aa'] finished
          setTimeout(() => {
            expect(vm.$data.value.length).to.equals(3);
            expect(vm.$data.value[2]).to.equals('3aa');
            done();
          });
        });
      });
    });
  });

  it('should render cascader panel correct', () => {
    vm = createCascaderPanel();
    expect(vm.$el.classList.contains('shopee-cascader-panel')).to.be.true;
  });
});
