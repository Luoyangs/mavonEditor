import Vue from 'vue';
import fecha from 'fecha';
import TimePicker from '../index';
import { createInstance, createElement, destroyInstance } from '@/test/utils';

Vue.use(TimePicker);

const createTimePicker = (props) => {
  props = props || {};
  return createInstance(TimePicker, props, true);
};

describe('time-picker.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  describe('basic', () => {
    it('should render correctly', () => {
      vm = createTimePicker();
      const popper = vm.$refs.popper;
      expect(popper.$el.querySelector('.shopee-time-picker-panel')).to.exist;
    });

    it('should render correct date', () => {
      const now = new Date();
      vm = createTimePicker({
        value: now
      });
      expect(vm.$refs.input.value).to.equal(fecha.format(now, 'HH:mm:ss'));
    });

    it('should show the picker when input clicked', done => {
      vm = createTimePicker();
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.popper;
      setTimeout(() => {
        expect(popper.$el.style.display).to.equal('');
        done();
      }, 100);
    });

    it('should hide the picker when click outside picker', done => {
      vm = createTimePicker('date');
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.popper;
      setTimeout(() => {
        document.body.click();
        setTimeout(() => {
          expect(popper.$el.style.display).to.equal('none');
          done();
        }, 300);
      }, 100);
    });
  });

  describe('panel', () => {
    it('should render all spinners', done => {
      vm = createTimePicker();
      const picker = vm.$refs.picker;
      vm.$el.querySelector('.shopee-selector').click();
      setTimeout(() => {
        expect(picker.$el.querySelector('.shopee-time-picker__hour-spinner')).to.be.exist;
        expect(picker.$el.querySelector('.shopee-time-picker__minute-spinner')).to.be.exist;
        expect(picker.$el.querySelector('.shopee-time-picker__second-spinner')).to.be.exist;
        done();
      });
    });

    it('should only render hour/minute spinner when format is HH:mm', done => {
      vm = createTimePicker({
        format: 'HH:mm'
      });
      const picker = vm.$refs.picker;
      vm.$el.querySelector('.shopee-selector').click();
      setTimeout(() => {
        expect(picker.$el.querySelector('.shopee-time-picker__hour-spinner')).to.be.exist;
        expect(picker.$el.querySelector('.shopee-time-picker__minute-spinner')).to.be.exist;
        expect(picker.$el.querySelector('.shopee-time-picker__second-spinner')).to.not.be.exist;
        done();
      });
    });

    it('should only render hour spinner when format is HH', done => {
      vm = createTimePicker({
        format: 'HH'
      });
      const picker = vm.$refs.picker;
      vm.$el.querySelector('.shopee-selector').click();
      setTimeout(() => {
        expect(picker.$el.querySelector('.shopee-time-picker__hour-spinner')).to.be.exist;
        expect(picker.$el.querySelector('.shopee-time-picker__minute-spinner')).to.not.be.exist;
        expect(picker.$el.querySelector('.shopee-time-picker__second-spinner')).to.not.be.exist;
        done();
      });
    });

    it('select time', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value"></shopee-time-picker>',
        data() {
          return {
            value: new Date()
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner .shopee-time-spinner__list li')[1].click();
        popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner .shopee-time-spinner__list li')[2].click();
        popper.$el.querySelectorAll('.shopee-time-picker__second-spinner .shopee-time-spinner__list li')[3].click();
        popper.$el.querySelector('.shopee-time-picker-panel__footer .shopee-button').click();
        setTimeout(() => {
          expect(vm.$refs.timePicker.visible).to.be.false;
          expect(vm.value.getHours()).to.equal(1);
          expect(vm.value.getMinutes()).to.equal(2);
          expect(vm.value.getSeconds()).to.equal(3);
          done();
        });
      });
    });

    it('show-confirm: false', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :show-confirm="showConfirm"></shopee-time-picker>',
        data() {
          return {
            showConfirm: false,
            value: new Date()
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner .shopee-time-spinner__list li')[1].click();
        setTimeout(() => {
          expect(vm.value.getHours()).to.equal(1);
          popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner .shopee-time-spinner__list li')[2].click();
          setTimeout(() => {
            expect(vm.value.getMinutes()).to.equal(2);
            popper.$el.querySelectorAll('.shopee-time-picker__second-spinner .shopee-time-spinner__list li')[3].click();
            setTimeout(() => {
              expect(vm.value.getSeconds()).to.equal(3);
              document.body.click();
              setTimeout(() => {
                expect(vm.$refs.timePicker.visible).to.be.false;
                done();
              });
            });
          });
        });
      });
    });

    it('disabled-hours: normal', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-hours="disabledHours" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: new Date(),
            disabledHours: [0, 1]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner .shopee-time-spinner__list li')[0].click();
        setTimeout(() => {
          expect(vm.value.getHours()).to.equal(2);
          done();
        });
      });
    });

    it('disabled-hours: function', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-hours="disabledHours" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: new Date(),
            disabledHours: () => {
              return Array.from({length: 3}, (_, i) => i);
            }
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner .shopee-time-spinner__list li')[0].click();
        setTimeout(() => {
          expect(vm.value.getHours()).to.equal(3);
          done();
        });
      });
    });

    it('disabled-minutes: normal', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-minutes="disabledMinutes" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: new Date(),
            disabledMinutes: [0, 1]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner .shopee-time-spinner__list li')[0].click();
        setTimeout(() => {
          expect(vm.value.getMinutes()).to.equal(2);
          done();
        });
      });
    });

    it('disabled-minutes: function', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-minutes="disabledMinutes" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: new Date(),
            disabledMinutes: (hour) => {
              return hour === 1 ? Array.from({length: 3}, (_, i) => i) : [];
            }
          };
        }
      }).$mount(createElement());
      const popper = vm.$refs.timePicker.$refs.popper;
      vm.$el.querySelector('.shopee-selector').click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner .shopee-time-spinner__list li')[0].click();
        setTimeout(() => {
          expect(vm.value.getMinutes()).to.equal(0);
          setTimeout(() => {
            popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner .shopee-time-spinner__list li')[1].click();
            setTimeout(() => {
              popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner .shopee-time-spinner__list li')[0].click();
              expect(vm.value.getMinutes()).to.equal(3);
              done();
            }, 10);
          });
        });
      });
    });

    it('disabled-seconds: normal', done => {
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-seconds="disabledSeconds" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: new Date(),
            disabledSeconds: [0, 1]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__second-spinner .shopee-time-spinner__list li')[0].click();
        setTimeout(() => {
          expect(vm.value.getSeconds()).to.equal(2);
          done();
        });
      });
    });

    it('disabled-seconds: function', done => {
      const now = new Date();
      now.setMinutes(10);
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-seconds="disabledSeconds" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: now,
            disabledSeconds: (hour, minute) => {
              return minute === 1 ? Array.from({length: 3}, (_, i) => i) : [];
            }
          };
        }
      }).$mount(createElement());
      const popper = vm.$refs.timePicker.$refs.popper;
      vm.$el.querySelector('.shopee-selector').click();
      setTimeout(() => {
        popper.$el.querySelectorAll('.shopee-time-picker__second-spinner .shopee-time-spinner__list li')[0].click();
        setTimeout(() => {
          expect(vm.value.getSeconds()).to.equal(0);
          setTimeout(() => {
            popper.$el.querySelectorAll('.shopee-time-picker__minute-spinner .shopee-time-spinner__list li')[1].click();
            setTimeout(() => {
              popper.$el.querySelectorAll('.shopee-time-picker__second-spinner .shopee-time-spinner__list li')[0].click();
              expect(vm.value.getSeconds()).to.equal(3);
              done();
            }, 10);
          });
        });
      });
    });

    it('show-disabled-time: true', done => {
      const now = new Date();
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :disabled-hours="disabledHours" :show-disabled-time="showDisabledTime" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: now,
            showDisabledTime: true,
            disabledHours: [0, 1]
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        const hourSpinners = popper.$el.querySelectorAll('.shopee-time-picker__hour-spinner .shopee-time-spinner__list li');
        expect(hourSpinners[0].innerText).to.equal('00');
        expect(hourSpinners[1].innerText).to.equal('01');
        hourSpinners[0].click();
        setTimeout(() => {
          expect(vm.value.getHours()).to.equal(now.getHours());
          hourSpinners[2].click();
          setTimeout(() => {
            expect(vm.value.getHours()).to.equal(2);
            done();
          });
        });
      });
    });
  });

  describe('spinner', () => {
    it('should scroll to correct position', done => {
      const now = new Date();
      now.setHours(10);
      vm = createTimePicker({
        value: now
      });
      const picker = vm.$refs.picker;
      vm.$el.querySelector('.shopee-selector').click();
      setTimeout(() => {
        expect(picker.$refs.hourSpinner.$refs.scroller.$refs.wrapper.scrollTop).to.equal(320);
        done();
      }, 100);
    });

    it('should add time when click down button', done => {
      const now = new Date();
      now.setHours(10);
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: now
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelector('.shopee-time-picker__hour-spinner .shopee-time-spinner__icon.down').click();
        expect(vm.value.getHours()).to.equal(11);
        done();
      });
    });

    it('should minus time when click up button', done => {
      const now = new Date();
      now.setHours(10);
      vm = new Vue({
        template: '<shopee-time-picker ref="timePicker" v-model="value" :show-confirm="false"></shopee-time-picker>',
        data() {
          return {
            value: now
          };
        }
      }).$mount(createElement());
      vm.$el.querySelector('.shopee-selector').click();
      const popper = vm.$refs.timePicker.$refs.popper;
      setTimeout(() => {
        popper.$el.querySelector('.shopee-time-picker__hour-spinner .shopee-time-spinner__icon.up').click();
        expect(vm.value.getHours()).to.equal(9);
        done();
      });
    });
  });
});
