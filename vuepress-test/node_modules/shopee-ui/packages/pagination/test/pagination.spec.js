import Vue from 'vue';
import ShopeePagination from '../index';
import { createInstance, destroyInstance, createElement, dispatchKeyboardEvent } from '@/test/utils';

Vue.use(ShopeePagination);

const createPagination = propsData => {
  return createInstance(ShopeePagination, propsData, true);
};

const createPaginationDom = propsData => {
  return new Vue({
    template: `<shopee-pagination ref="pagination" v-bind="propsData">
              </shopee-pagination>`,
    data: {
      propsData
    }
  }).$mount(createElement());
};

describe('pagination.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  it('should render correct', () => {
    vm = createPagination();
    expect(vm.$el.classList.contains('shopee-pagination')).to.be.true;
  });

  it('should jump to next page when next clicked', done => {
    vm = new Vue({
      template: '<shopee-pagination :current="current" :total="total" @page-change="onPageChange"></shopee-pagination>',
      data() {
        return {
          current: 1,
          total: 100
        };
      },
      methods: {
        onPageChange(page) {
          this.current = page;
        }
      }
    }).$mount(createElement());
    vm.$el.querySelector('.shopee-pager__button-next').click();
    setTimeout(() => {
      expect(vm.current).to.equal(2);
      done();
    });
  });

  it('should jump to prev page when prev clicked', done => {
    vm = new Vue({
      template: '<shopee-pagination :current="current" :total="total" @page-change="onPageChange"></shopee-pagination>',
      data() {
        return {
          current: 10,
          total: 100
        };
      },
      methods: {
        onPageChange(page) {
          this.current = page;
        }
      }
    }).$mount(createElement());
    vm.$el.querySelector('.shopee-pager__button-prev').click();
    setTimeout(() => {
      expect(vm.current).to.equal(9);
      done();
    });
  });

  it('should jump to correct page when pages clicked', done => {
    vm = new Vue({
      template: '<shopee-pagination :current="current" :total="total" @page-change="onPageChange"></shopee-pagination>',
      data() {
        return {
          current: 1,
          total: 100
        };
      },
      methods: {
        onPageChange(page) {
          this.current = page;
        }
      }
    }).$mount(createElement());
    vm.$el.querySelectorAll('.shopee-pager__page')[2].click();
    setTimeout(() => {
      expect(vm.current).to.equal(3);
      done();
    });
  });

  it('should render correct pages when pages less than 7', done => {
    vm = createPagination({
      total: 65
    });
    setTimeout(() => {
      let pages = Array.prototype.slice.call(vm.$el.querySelectorAll('.shopee-pager__page')).map(page => page.innerHTML).join(',');
      expect(pages).to.equal('1,2,3,4,5,6,7');
      done();
    });
  });

  it('should render correct pages when pages more than 7 and current is in the middle of page', done => {
    vm = createPagination({
      total: 90,
      current: 5
    });
    setTimeout(() => {
      let pages = Array.prototype.slice.call(vm.$el.querySelectorAll('.shopee-pager__page')).map(page => page.innerHTML).join(',');
      expect(pages).to.equal('1,...,4,5,6,...,9');
      done();
    });
  });
  it('should render correct pages when pages less than 5 and type is increase', done => {
    vm = createPagination({
      total: 50,
      hasMore: false,
      type: 'increase'
    });
    setTimeout(() => {
      let pages = Array.prototype.slice.call(vm.$el.querySelectorAll('.shopee-pager__page')).map(page => page.innerHTML).join(',');
      expect(pages).to.equal('1,2,3,4,5');
      done();
    });
  });
  it('should render correct pages when pages more than 5 and type is increase', done => {
    vm = createPagination({
      total: 80,
      hasMore: false,
      type: 'increase',
      current: 3
    });
    setTimeout(() => {
      let pages = Array.prototype.slice.call(vm.$el.querySelectorAll('.shopee-pager__page')).map(page => page.innerHTML).join(',');
      expect(pages).to.equal('1,2,3,4,...');
      done();
    });
  });

  it('should render correct pages when pages more than 5 and type is increase and current is in the middle of page', done => {
    vm = createPagination({
      total: 80,
      hasMore: false,
      type: 'increase',
      current: 5
    });
    setTimeout(() => {
      let pages = Array.prototype.slice.call(vm.$el.querySelectorAll('.shopee-pager__page')).map(page => page.innerHTML).join(',');
      expect(pages).to.equal('1,...,4,5,6,...');
      done();
    });
  });
  it('should render correct pages when pages more than 5 and type is increase and current is in the end of page', done => {
    vm = createPagination({
      total: 80,
      hasMore: false,
      type: 'increase',
      current: 6
    });
    setTimeout(() => {
      let pages = Array.prototype.slice.call(vm.$el.querySelectorAll('.shopee-pager__page')).map(page => page.innerHTML).join(',');
      expect(pages).to.equal('1,...,5,6,7,8');
      done();
    });
  });
  it('should not trigger page-change when `...` clicked', done => {
    let clicked = false;
    vm = new Vue({
      template: '<shopee-pagination :current="current" :total="total" @page-change="onPageChange"></shopee-pagination>',
      data() {
        return {
          total: 90,
          current: 5
        };
      },
      methods: {
        onPageChange() {
          clicked = true;
        }
      }
    }).$mount(createElement());
    vm.$el.querySelectorAll('.shopee-pager__page')[1].click();
    setTimeout(() => {
      expect(clicked).to.be.false;
      done();
    });
  });
  it('should render correct by layout', () => {
    vm = createPagination({
      total: 65,
      layout: 'pages,sizes,jumper'
    });
    expect(vm.$el.querySelector('.shopee-pager')).to.exist;
    expect(vm.$el.querySelector('.shopee-pagination-sizes')).to.exist;
    expect(vm.$el.querySelector('.shopee-pagination-jumper')).to.exist;
  });

  it('should watch correct', done => {
    vm = createPaginationDom({
      total: 65,
      pageSize: 10
    });
    const pagination = vm.$refs.pagination;
    vm.propsData.pageSize = 20;
    setTimeout(() => {
      expect(pagination.innerPageSize).to.equal(20);
      done();
    });
  });

  it('should sizes component onPageSizeChange&visibleChange correct', () => {
    vm = createPagination({
      total: 65,
      sizesWithTotal: true,
      layout: 'sizes'
    });
    const sizes = vm.$children[0];
    sizes.onPageSizeChange(20);
    expect(vm.innerPageSize).to.equal(20);
    sizes.visibleChange(true);
    expect(sizes.active).to.be.true;
  });

  it('should jumper component onChange&onJump correct', (done) => {
    vm = new Vue({
      template: `<shopee-pagination ref="pagination" :current="current" :total="100" :layout="'jumper'">
                </shopee-pagination>`,
      data() {
        return {
          current: 1,
        };
      }
    }).$mount(createElement());
    const pagination = vm.$refs.pagination;
    const jumper = pagination.$children[0];
    expect(jumper.innerValue).to.equal(1);
    vm.current = 2;
    setTimeout(() => {
      expect(jumper.innerValue).to.equal(2);
      jumper.onChange(3);
      expect(jumper.innerValue).to.equal(3);
      const inputDom = jumper.$children[0].$el;
      dispatchKeyboardEvent(inputDom, 13);
      expect(jumper.innerValue).to.equal(3);
      done();
    });
  });
});
