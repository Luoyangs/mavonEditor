const ShopeeColCount = 14;
export default {
  name: 'ShopeeCol',

  props: {
    span: {
      type: Number,
      default: ShopeeColCount,
      validator(span = ShopeeColCount) {
        return /^[0-9]{1,2}$/.test(span + '') && parseInt(span,10) >= 1 && parseInt(span,10) <= ShopeeColCount;
      }
    },
    tag: {
      type: String,
      default: 'div'
    },
    offset: {
      type: Number,
      validator(offset) {
        return /^[0-9]{1,2}$/.test(offset + '') && parseInt(offset,10) >= 0 && parseInt(offset,10) <= ShopeeColCount;
      }
    },
    pull: {
      type: Number,
      validator(pull) {
        return /^[0-9]{1,2}$/.test(pull + '') && parseInt(pull,10) >= 0 && parseInt(pull,10) <= ShopeeColCount;
      }
    },
    push: {
      type: Number,
      validator(push) {
        return /^[0-9]{1,2}$/.test(push + '') && parseInt(push,10) >= 0 && parseInt(push,10) <= ShopeeColCount;
      }
    }
  },

  computed: {
    gutter() {
      let parent = this.$parent;
      while (parent && parent.$options.name !== 'ShopeeRow') {
        parent = parent.$parent;
      }
      return parent ? parent.gutter : 0;
    }
  },
  render(h) {
    let classList = [];
    let style = {};

    if (this.gutter) {
      style.paddingLeft = this.gutter / 2 + 'px';
      style.paddingRight = style.paddingLeft;
    }

    ['span', 'offset', 'pull', 'push'].forEach(prop => {
      if (this[prop] || this[prop] === 0) {
        classList.push(
          prop !== 'span' ? `shopee-col-${prop}-${this[prop]}` : `shopee-col-${this[prop]}`
        );
      }
    });

    return h(this.tag, {
      class: ['shopee-col', classList],
      style
    }, this.$slots.default);
  }
};
