import Vue from 'vue';
import ShopeeSidebar from '../index';
import { createElement, destroyInstance } from '@/test/utils';

Vue.use(ShopeeSidebar);
const createSimpleSidebar = (options = {}) => {
  const {defaultActive} = options;
  return new Vue({
    template: `<shopee-sidebar :default-active="defaultActive" ref="sidebar">
    <shopee-sidebar-item-group title="test1">
      <shopee-sidebar-item :index="item.index" v-for="(item, index) in items" :key="index">
        {{item.label}}
      </shopee-sidebar-item>
    </shopee-sidebar-item-group>
  </shopee-sidebar>`,
    data() {
      return {
        defaultActive,
        items: [{
          index: '1',
          label: 'option1'
        }, {
          index: '2',
          label: 'option2'
        }, {
          index: '3',
          label: 'option3'
        }]
      };
    }
  }).$mount(createElement());
};
describe('sidebar.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });
  it('should render correct', () => {
    vm = createSimpleSidebar();
    expect(vm.$el.classList.contains('shopee-sidebar')).to.be.true;
  });

  it('should render default active correct', () => {
    vm = createSimpleSidebar({
      defaultActive: '1'
    });
    const activeNode = vm.$el.querySelectorAll('[role=sidebar_item]')[0];
    expect(activeNode.classList.contains('is-active')).to.be.true;
    expect(vm.$refs.sidebar.$data.activeIndex === '1').to.be.true;
  });

  it('should change active when click item', (done) => {
    vm = createSimpleSidebar();
    const activeNode = vm.$el.querySelectorAll('[role=sidebar_item]')[1];
    activeNode.click();
    setTimeout(() => {
      expect(activeNode.classList.contains('is-active')).to.be.true;
      expect(vm.$refs.sidebar.$data.activeIndex === '2').to.be.true;
      done();
    });
  });
});
