import Vue from 'vue';
import ShopeeDropdown from '../index';
import { destroyInstance, createElement } from '@/test/utils';

Vue.use(ShopeeDropdown);

describe('dropdown.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  it('[trigger click] should render correct', () => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    expect(vm.$el.classList.contains('shopee-dropdown')).to.be.true;
  });

  it('[trigger click] should show menu when clicked default slot', done => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').click();
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
      done();
    }, 500);
  });

  it('[trigger click] should hide menu when clicked again', done => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').click();
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
      vm.$el.querySelector('span').click();
      setTimeout(() => {
        expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('none');
        done();
      }, 500);
    }, 500);
  });

  it('[trigger hover] should render correct', () => {
    vm = new Vue({
      template: `<shopee-dropdown trigger="hover">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    expect(vm.$el.classList.contains('shopee-dropdown')).to.be.true;
  });

  it('[trigger hover] should show menu when hover', done => {
    vm = new Vue({
      template: `<shopee-dropdown trigger="hover">
        <span >Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').dispatchEvent(new Event('mouseenter'));
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
      done();
    }, 500);
  });

  it('[trigger hover] should hide menu when mouse leave', done => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').dispatchEvent(new Event('mouseenter'));
    setTimeout(() => {
      setTimeout(() => {
        vm.$el.querySelector('span').dispatchEvent(new Event('mouseleave'));
        setTimeout(() => {
          expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('none');
          done();
        }, 500);
      });
    }, 500);
  });

  it('[trigger contextMenu] should render correct', () => {
    vm = new Vue({
      template: `<shopee-dropdown trigger="contextMenu">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    expect(vm.$el.classList.contains('shopee-dropdown')).to.be.true;
  });

  it('[trigger contextMenu] should show menu when click right', done => {
    vm = new Vue({
      template: `<shopee-dropdown trigger="contextMenu">
        <span >Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').dispatchEvent(new Event('contextmenu'));
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
      done();
    }, 500);
  });

  it('should hide menu when item clicked', done => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').click();
    setTimeout(() => {
      setTimeout(() => {
        vm.$refs.dropdownMenu.$el.querySelector('.shopee-dropdown-item').click();
        setTimeout(() => {
          expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('none');
          done();
        }, 500);
      });
    }, 500);
  });

  it('visible', done => {
    vm = new Vue({
      template: `<shopee-dropdown :visible="visible">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`,
      data() {
        return {
          visible: false
        };
      }
    }).$mount(createElement());
    expect(vm.$el.classList.contains('shopee-dropdown')).to.be.true;
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('none');
      vm.visible = true;
      setTimeout(() => {
        expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
        vm.$el.querySelector('span').click();
        setTimeout(() => {
          expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
          done();
        }, 500);
      }, 500);
    }, 500);
  });

  it('disabled', done => {
    vm = new Vue({
      template: `<shopee-dropdown disabled>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').click();
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('none');
      done();
    }, 500);
  });

  it('set disabled', done => {
    vm = new Vue({
      template: `<shopee-dropdown :disabled="disabled">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`,
      data() {
        return {
          disabled: true
        };
      }
    }).$mount(createElement());
    vm.$el.querySelector('span').click();
    setTimeout(() => {
      expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('none');
      done();
    }, 500);
  });

  it('item disabled', done => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item disabled>Item</shopee-dropdown-item>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    vm.$el.querySelector('span').click();
    setTimeout(() => {
      setTimeout(() => {
        vm.$refs.dropdownMenu.$el.querySelector('.shopee-dropdown-item').click();
        setTimeout(() => {
          expect(vm.$refs.dropdownMenu.$el.style.display).to.equal('');
          done();
        }, 500);
      });
    }, 500);
  });

  it('dropdown item group', () => {
    vm = new Vue({
      template: `<shopee-dropdown>
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item-group title="title">
            <shopee-dropdown-item>Item</shopee-dropdown-item>
          </shopee-dropdown-item-group>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    expect(vm.$el.querySelector('.shopee-dropdown-item-group')).to.exist;
  });

  it('dropdown onClickoutside correct', (done) => {
    vm = new Vue({
      template: `<shopee-dropdown ref="dropdown">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item-group title="title">
            <shopee-dropdown-item>Item</shopee-dropdown-item>
          </shopee-dropdown-item-group>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    const dropdown = vm.$refs.dropdown;
    dropdown.onClickoutside(new Event('click'));
    setTimeout(() => {
      expect(dropdown.actualVisible).to.be.false;
      done();
    },500);
  });

  it('dropdown removeEvent correct', () => {
    vm = new Vue({
      template: `<shopee-dropdown ref="dropdown" trigger="hover">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item-group title="title">
            <shopee-dropdown-item>Item</shopee-dropdown-item>
          </shopee-dropdown-item-group>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    let dropdown = vm.$refs.dropdown;
    dropdown.removeEvent();
    expect(dropdown.trigger).to.equal('hover');
    destroyInstance(vm);
    vm = new Vue({
      template: `<shopee-dropdown ref="dropdown" trigger="contextMenu">
        <span>Dropdown</span>
        <shopee-dropdown-menu slot="dropdown" ref="dropdownMenu">
          <shopee-dropdown-item-group title="title">
            <shopee-dropdown-item>Item</shopee-dropdown-item>
          </shopee-dropdown-item-group>
        </shopee-dropdown-menu>
      </shopee-dropdown>`
    }).$mount(createElement());
    dropdown = vm.$refs.dropdown;
    dropdown.removeEvent();
    expect(dropdown.trigger).to.equal('contextMenu');
  });
});
