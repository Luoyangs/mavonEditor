import Vue from 'vue';
import ShopeeSlider from '../index';
import { createInstance, destroyInstance } from '@/test/utils';

Vue.use(ShopeeSlider);

describe('slider.vue', () => {
  let vm;

  const MARGIN_LEFT = 0;
  if (document) {
    document.body.style.marginLeft = 0;
  }

  afterEach(() => {
    destroyInstance(vm);
  });

  it('should render correct', () => {
    vm = createInstance(ShopeeSlider);
    expect(vm.$el.classList.contains('shopee-slider')).to.be.true;
    expect(vm.innerValues[0]).to.equal(0);
  });

  it('should render correct when vertical is true', () => {
    vm = createInstance(ShopeeSlider, {
      vertical: true
    }, true);
    expect(vm.$el.classList.contains('shopee-slider--vertical')).to.be.true;
  });

  it('should show corrent value', () => {
    vm = createInstance(ShopeeSlider, {
      value: 30
    }, true);
    expect(vm.$el.classList.contains('shopee-slider')).to.be.true;
    expect(vm.innerValues[0]).to.equal(30);
    expect(Number(vm.percentValues[0])).to.equal(30);
  });

  it('should show corrent value when min is set', () => {
    vm = createInstance(ShopeeSlider, {
      value: 30,
      min: 30
    }, true);
    expect(vm.$el.classList.contains('shopee-slider')).to.be.true;
    expect(vm.innerValues[0]).to.equal(30);
    expect(Number(vm.percentValues[0])).to.equal(0);
  });

  it('should show corrent value when max is set', () => {
    vm = createInstance(ShopeeSlider, {
      value: 30,
      max: 30
    }, true);
    expect(vm.$el.classList.contains('shopee-slider')).to.be.true;
    expect(vm.innerValues[0]).to.equal(30);
    expect(Number(vm.percentValues[0])).to.equal(100);
  });

  it('should not exceed min and max', done => {
    vm = createInstance(ShopeeSlider, {
      value: 30,
      min: 30
    }, true);
    expect(vm.innerValues[0]).to.equal(30);
    setTimeout(() => {
      vm.value = 10;
      setTimeout(() => {
        expect(vm.innerValues[0]).to.equal(30);
        vm.value = 120;
        setTimeout(() => {
          expect(vm.innerValues[0]).to.equal(100);
          done();
        });
      });
    }, 10);
  });

  it('should tooltip show and hide', done => {
    vm = createInstance(ShopeeSlider);
    const thumb = vm.$refs.thumb[0];
    thumb.dispatchEvent(new Event('mouseenter'));
    setTimeout(() => {
      expect(vm.$refs.tooltip[0].$refs.popover.visible).to.true;
      thumb.dispatchEvent(new Event('mouseleave'));
      setTimeout(() => {
        expect(vm.$refs.tooltip[0].$refs.popover.visible).to.false;
        done();
      }, 500);
    }, 500);
  });

  it('should always show tooltip', done => {
    vm = createInstance(ShopeeSlider, {
      showTip: 'always'
    });
    setTimeout(() => {
      expect(vm.$refs.tooltip[0].$refs.popover.visible).to.true;
      const thumb = vm.$refs.thumb[0];
      thumb.dispatchEvent(new Event('mouseleave'));
      setTimeout(() => {
        expect(vm.$refs.tooltip[0].$refs.popover.visible).to.true;
        done();
      }, 500);
    }, 500);
  });

  it('should never show tooltip', done => {
    vm = createInstance(ShopeeSlider, {
      showTip: 'never'
    });
    expect(vm.$refs.tooltip[0].$refs.popover.visible).to.false;
    const thumb = vm.$refs.thumb[0];
    thumb.dispatchEvent(new Event('mouseenter'));
    setTimeout(() => {
      expect(vm.$refs.tooltip[0].$refs.popover.visible).to.false;
      done();
    }, 500);
  });

  it('should format tooltip', done => {
    const tipFormatter = (value) => value + '%';
    vm = createInstance(ShopeeSlider, {
      tipFormatter
    });
    expect(vm.$refs.tooltip[0].content).to.equal('0%');
    vm.value = 60;
    setTimeout(() => {
      expect(vm.$refs.tooltip[0].content).to.equal('60%');
      done();
    });
  });

  it('should change value correctly when click', done => {
    vm = createInstance({
      template: `
        <div style="width: 100px;">
          <shopee-slider ref="slider" v-model="value"></shopee-slider>
        </div>
      `,
      data() {
        return {
          value: 0
        };
      }
    }, true);
    const slider = vm.$refs.slider;
    slider.handleClick({ type: 'click', clientX: 50 + MARGIN_LEFT });
    setTimeout(() => {
      expect(slider.innerValues[0]).to.equal(50);
      done();
    });
  });

  it('should change value correctly when drag', done => {
    vm = createInstance({
      template: `
        <div style="width: 100px;">
          <shopee-slider ref="slider" v-model="value"></shopee-slider>
        </div>
      `,
      data() {
        return {
          value: 0
        };
      }
    }, true);
    const slider = vm.$refs.slider;
    slider.onDragStart({ type: 'mousedown', clientX: 10 }, 0);
    slider.onDragging({ type: 'mousemove', clientX: 40 });
    setTimeout(() => {
      expect(slider.innerValues[0]).to.equal(30);
      slider.onDragEnd({ type: 'mouseup', clientX: 70 });
      setTimeout(() => {
        expect(slider.innerValues[0]).to.equal(60);
        done();
      });
    });
  });

  it('should disabled click and drag when disabled is true', done => {
    vm = createInstance({
      template: `
        <div style="width: 100px;">
          <shopee-slider ref="slider" v-model="value" disabled></shopee-slider>
        </div>
      `,
      data() {
        return {
          value: 0
        };
      }
    }, true);
    const slider = vm.$refs.slider;
    slider.handleClick({ type: 'click', clientX: 50 + MARGIN_LEFT });
    setTimeout(() => {
      expect(slider.innerValues[0]).to.equal(0);
      slider.onDragStart({ type: 'mousedown', clientX: 10 }, 0);
      slider.onDragging({ type: 'mousemove', clientX: 40 });
      setTimeout(() => {
        expect(slider.innerValues[0]).to.equal(0);
        slider.onDragEnd({ type: 'mouseup', clientX: 70 });
        setTimeout(() => {
          expect(slider.innerValues[0]).to.equal(0);
          done();
        });
      });
    });
  });

  it('should change value correctly when set step', done => {
    vm = createInstance(ShopeeSlider, {
      step: 10
    });
    expect(vm.innerValues[0]).to.equal(0);
    vm.value = 60;
    setTimeout(() => {
      expect(vm.innerValues[0]).to.equal(60);
      vm.value = 72;
      setTimeout(() => {
        expect(vm.innerValues[0]).to.equal(70);
        vm.value = 85;
        setTimeout(() => {
          expect(vm.innerValues[0]).to.equal(90);
          done();
        });
      });
    });
  });

  it('should change value correctly when set decimal step', done => {
    vm = createInstance(ShopeeSlider, {
      min: 0,
      max: 1,
      step: 0.1
    });
    expect(vm.innerValues[0]).to.equal(0);
    vm.value = 0.3;
    setTimeout(() => {
      expect(vm.innerValues[0]).to.equal(0.3);
      vm.value = 0.42;
      setTimeout(() => {
        expect(vm.innerValues[0]).to.equal(0.4);
        vm.value = 0.55;
        setTimeout(() => {
          expect(vm.innerValues[0]).to.equal(0.6);
          done();
        });
      });
    });
  });

  it('should show stops correct when showStops is true', () => {
    vm = createInstance(ShopeeSlider, {
      showStops: true,
      step: 10
    }, true);
    const stops = vm.$el.querySelectorAll('.shopee-slider-stop');
    expect(stops.length).to.equal(9);
  });

  it('should render correct when range is true', () => {
    vm = createInstance(ShopeeSlider, {
      range: true,
      value: [10, 50]
    }, true);
    const thumbs = vm.$el.querySelectorAll('.shopee-slider-thumb');
    expect(thumbs.length).to.equal(2);
    expect(vm.innerValues.length).to.equal(2);
    expect(vm.innerValues[0]).to.equal(10);
    expect(vm.innerValues[1]).to.equal(50);
  });

  it('should change value correctly when click range slider', done => {
    vm = createInstance({
      template: `
        <div style="width: 100px;">
          <shopee-slider ref="slider" v-model="value" range></shopee-slider>
        </div>
      `,
      data() {
        return {
          value: [10, 60]
        };
      }
    }, true);
    const slider = vm.$refs.slider;
    slider.handleClick({ type: 'click', clientX: 50 + MARGIN_LEFT });
    setTimeout(() => {
      expect(slider.innerValues[0]).to.equal(10);
      expect(slider.innerValues[1]).to.equal(50);
      done();
    });
  });

  it('should render correct when marks is set', () => {
    vm = createInstance(ShopeeSlider, {
      marks: {
        0: '0°C',
        26: '26°C',
        37: '37°C',
        100: '100°C'
      }
    }, true);
    expect(vm.markArray.length).to.equal(4);
    expect(vm.markArray[2].value).to.equal(37);
  });

  it('should change value correctly when click slider with marks', done => {
    vm = createInstance({
      template: `
        <div style="width: 100px;">
          <shopee-slider ref="slider" v-model="value" :step="step" :marks="marks"></shopee-slider>
        </div>
      `,
      data() {
        return {
          value: 0,
          step: 1,
          marks: {
            0: '0°C',
            26: '26°C',
            37: '37°C',
            100: '100°C'
          }
        };
      }
    }, true);
    const slider = vm.$refs.slider;
    slider.handleClick({ type: 'click', clientX: 35 + MARGIN_LEFT });
    setTimeout(() => {
      expect(slider.innerValues[0]).to.equal(35);
      vm.step = 10;
      slider.handleClick({ type: 'click', clientX: 40 + MARGIN_LEFT });
      setTimeout(() => {
        expect(slider.innerValues[0]).to.equal(40);
        slider.handleClick({ type: 'click', clientX: 35 + MARGIN_LEFT });
        setTimeout(() => {
          expect(slider.innerValues[0]).to.equal(37);
          slider.handleClick({ type: 'click', clientX: 25 + MARGIN_LEFT });
          setTimeout(() => {
            expect(slider.innerValues[0]).to.equal(26);
            vm.step = null;
            slider.handleClick({ type: 'click', clientX: 40 + MARGIN_LEFT });
            setTimeout(() => {
              expect(slider.innerValues[0]).to.equal(37);
              done();
            });
          });
        });
      });
    });
  });
});
