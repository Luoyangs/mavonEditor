import Vue from 'vue';
import { ShopeeUIComponent } from '../../types/common';

type ShopeeTabsType = 'line' | 'card' | 'module'
type ShopeeTabsTabPosition = 'top' | 'bottom' | 'left' | 'right'
type ShopeeTabsSize = 'large' | 'normal' | 'small'

export class Tabs extends ShopeeUIComponent {
  // activates the name of the tab panel
  value: string

  // the basic style of the tabs
  type: ShopeeTabsType

  // the position of tabs
  tabPosition: ShopeeTabsTabPosition

  // the size of tabs
  size: ShopeeTabsSize

  // whether the tab is closable, only effective when the `type` is `card`
  closable: boolean
  forceUpdateLabel: boolean

  // hook function before switching tab. return `false` or rejected Promise to interrupt close event
  beforeRemove: (name: string) => (boolean | Promise<any>)
  beforeTabClick: (activeTab: TabPane, newTabKey: string) => (boolean | Promise<any>)
}

export class TabPane extends Vue {
  // identifier corresponding to the `value` of Tabs, the default for its index
  name: string

  // the display text of the tab
  label: string

  // whether to disable the tab
  disabled: boolean

  // whether the tab is closable, only effective when the `type` is `card`
  closable: boolean

  // whether the tab is lazily rendered, set `true` so that the tab is only rendered when actived
  lazy: boolean

  // label max width
  labelMaxWidth: number
}

export default Tabs;
