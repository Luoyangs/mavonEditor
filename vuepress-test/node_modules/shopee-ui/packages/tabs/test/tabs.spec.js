import Vue from 'vue';
import ShopeeTabs from '../index';
import { createElement, destroyInstance } from '@/test/utils';

Vue.use(ShopeeTabs);

const createSimpleTabs = (props = {}) => {
  return new Vue({
    template: `
      <shopee-tabs ref="tabs" :value="value" v-bind="props" @tab-remove="handleTabRemove">
        <ShopeeTabPane label="Tab 1" name="tab1">Content of Tab 1</ShopeeTabPane>
        <ShopeeTabPane label="Tab 2" name="tab2">Content of Tab 2</ShopeeTabPane>
        <ShopeeTabPane label="Tab 3" name="tab3">Content of Tab 3</ShopeeTabPane>
      </shopee-tabs>`,
    data() {
      return {
        props,
        value: 'tab1',
        tabRemoveKey: null
      };
    },
    methods: {
      handleTabRemove(key) {
        this.tabRemoveKey = key;
      }
    }
  }).$mount(createElement());
};

const createTabsWithCustomTabPane = (props = {}, tabProps = {}) => {
  return new Vue({
    template: `
      <shopee-tabs value="tab1" v-bind="props">
        <ShopeeTabPane label="Tab 1" name="tab1">Content of Tab 1</ShopeeTabPane>
        <ShopeeTabPane label="Tab 2" name="tab2">Content of Tab 2</ShopeeTabPane>
        <ShopeeTabPane label="Tab 3" name="tab3" v-bind="tabProps">Content of Tab 3</ShopeeTabPane>
      </shopee-tabs>`,
    data() {
      return {
        props,
        tabProps
      };
    }
  }).$mount(createElement());
};

describe('tabs.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  describe('tabs', () => {

    it('should render correctly', () => {
      vm = createSimpleTabs();
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
    });

    it('should switch to the specified tab when clicked', done => {
      vm = createSimpleTabs();
      setTimeout(() => {
        const nav = vm.$refs.tabs.$refs.nav;
        const panes = vm.$refs.tabs.$refs.panes;
        expect(nav.querySelectorAll('.shopee-tabs__nav-tab')[0].classList.contains('active')).to.be.true;
        expect(panes.querySelectorAll('.shopee-tabs-tabpane')[0].style.display).to.equals('');
        nav.querySelectorAll('.shopee-tabs__nav-tab')[2].click();
        setTimeout(() => {
          expect(nav.querySelectorAll('.shopee-tabs__nav-tab')[0].classList.contains('active')).to.be.false;
          expect(nav.querySelectorAll('.shopee-tabs__nav-tab')[2].classList.contains('active')).to.be.true;
          expect(panes.querySelectorAll('.shopee-tabs-tabpane')[0].style.display).to.equals('none');
          expect(panes.querySelectorAll('.shopee-tabs-tabpane')[2].style.display).to.equals('');
          done();
        });
      });
    });

    it('should switch to the specified tab when value change', done => {
      vm = createSimpleTabs();
      setTimeout(() => {
        const nav = vm.$refs.tabs.$refs.nav;
        const panes = vm.$refs.tabs.$refs.panes;
        expect(nav.querySelectorAll('.shopee-tabs__nav-tab')[0].classList.contains('active')).to.be.true;
        expect(panes.querySelectorAll('.shopee-tabs-tabpane')[0].style.display).to.equals('');
        vm.$data.value = 'tab3';
        setTimeout(() => {
          expect(nav.querySelectorAll('.shopee-tabs__nav-tab')[0].classList.contains('active')).to.be.false;
          expect(nav.querySelectorAll('.shopee-tabs__nav-tab')[2].classList.contains('active')).to.be.true;
          expect(panes.querySelectorAll('.shopee-tabs-tabpane')[0].style.display).to.equals('none');
          expect(panes.querySelectorAll('.shopee-tabs-tabpane')[2].style.display).to.equals('');
          done();
        });
      });
    });

    it('type is card', () => {
      vm = createSimpleTabs({
        type: 'card'
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.classList.contains('shopee-tabs-card')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
    });

    it('type is module', () => {
      vm = createSimpleTabs({
        type: 'module'
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.classList.contains('shopee-tabs-module')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
    });

    it('closable', done => {
      vm = createSimpleTabs({
        type: 'card',
        closable: true
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.classList.contains('shopee-tabs-card')).to.be.true;
      setTimeout(() => {
        expect(vm.$el.querySelectorAll('.shopee-tabs-close').length).to.equals(3);
        vm.$el.querySelector('.shopee-tabs-close').click();
        setTimeout(() => {
          expect(vm.$el.querySelectorAll('.shopee-tabs-close').length).to.equals(2);
          expect(vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[0].classList.contains('active')).to.be.true;
          expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane')[0].style.display).to.equals('');
          expect(vm.$refs.tabs.activeTab === 'tab2');
          done();
        });
      });
    });

    it('tab position', () => {
      vm = createSimpleTabs({
        tabPosition: 'bottom'
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.classList.contains('shopee-tabs-bottom')).to.be.true;
    });

    it('watch navOffset', (done) => {
      vm = createSimpleTabs({
        tabPosition: 'bottom'
      });
      const tabs = vm.$refs.tabs;
      tabs.navOffset = 1;
      setTimeout(() => {
        expect(!!tabs.barStyle.transform).to.be.true;
        expect(!!tabs.barStyle.width).to.be.true;
        done();
      });
    });

    it('handleClick correct', (done) => {
      vm = createSimpleTabs({
        tabPosition: 'bottom',
        beforeTabClick: () => {
          return true;
        }
      });
      setTimeout(() => {
        const tabs = vm.$refs.tabs;
        const nav = vm.$refs.tabs.$refs.nav;
        nav.querySelectorAll('.shopee-tabs__nav-tab')[2].click();
        setTimeout(() => {
          expect(tabs.activeTab).to.equal('tab3');
          done();
        });
      });
    });

    it('scrollPrev & scrollNext correct', (done) => {
      vm = createSimpleTabs({
        tabPosition: 'bottom'
      });
      setTimeout(() => {
        const tabs = vm.$refs.tabs;
        tabs.navOffset = 1;
        tabs.scrollPrev();
        setTimeout(() => {
          expect(tabs.navOffset).to.equal(0);
          tabs.scrollNext();
          setTimeout(() => {
            expect(tabs.navOffset).to.equal(0);
            done();
          });
        });
      });
    });

    it('handleRemove correct', (done) => {
      vm = createSimpleTabs({
        tabPosition: 'bottom',
        type: 'card',
        closable: true,
        beforeRemove() {
          return true;
        }
      });
      setTimeout(() => {
        const tabs = vm.$refs.tabs;
        const nav = tabs.$refs.nav;
        nav.querySelector('.shopee-tabs-close').dispatchEvent(new Event('click'));
        setTimeout(() => {
          expect(vm.tabRemoveKey).to.equal('tab1');
          done();
        });
      });
    });
  });

  describe('tab pane', () => {
    it('disabled', done => {
      vm = createTabsWithCustomTabPane({}, {
        disabled: true
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
      setTimeout(() => {
        vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[2].click();
        setTimeout(() => {
          expect(vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[2].classList.contains('active')).to.not.true;
          expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane')[2].style.display).to.equals('none');
          done();
        });
      });
    });

    it('closable', done => {
      vm = createTabsWithCustomTabPane({
        type: 'card',
        closable: true
      }, {
        closable: false
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.classList.contains('shopee-tabs-card')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
      setTimeout(() => {
        expect(vm.$el.querySelectorAll('.shopee-tabs-close').length).to.equals(2);
        expect(vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[2].querySelector('.shopee-tabs-close')).to.not.true;
        done();
      });
    });

    it('lazy', done => {
      vm = createTabsWithCustomTabPane({}, {
        lazy: true
      });
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(2);
      setTimeout(() => {
        vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[2].click();
        setTimeout(() => {
          expect(vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[2].classList.contains('active')).to.be.true;
          expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
          done();
        });
      });
    });

    it('label slot', done => {
      vm = new Vue({
        template: `
          <shopee-tabs value="tab1">
            <ShopeeTabPane label="Tab 1" name="tab1">Content of Tab 1</ShopeeTabPane>
            <ShopeeTabPane label="Tab 2" name="tab2">Content of Tab 2</ShopeeTabPane>
            <ShopeeTabPane label="Tab 3" name="tab3">Content of Tab 3
              <span slot="label">Long long Tab 3</span>
            </ShopeeTabPane>
          </shopee-tabs>`
      }).$mount(createElement());
      expect(vm.$el.classList.contains('shopee-tabs')).to.be.true;
      expect(vm.$el.querySelectorAll('.shopee-tabs-tabpane').length).to.equals(3);
      setTimeout(() => {
        expect(vm.$el.querySelectorAll('.shopee-tabs__nav-tab')[2].querySelector('span').innerHTML).to.equals('Long long Tab 3');
        done();
      });
    });
  });
});
