import { CreateElement, VNode } from 'vue';
import { ShopeeUIComponent } from '../../types/common';

export interface ShopeeTreeNodeData {
  label?: string;
  children?: Array<ShopeeTreeNodeData>;
}

export interface ShopeeTreeNode {
  childNodes: ShopeeTreeNode[];
  data: any;
  expanded: boolean;
  id: number;
  isLeaf: boolean;
  level: number;
  parent: ShopeeTreeNode | null;
  store: any;
  key: any;
  label: string;
  isCurrent: boolean;
}

export class Tree extends ShopeeUIComponent {
  // the data of ShopeeTreeNode
  data: Array<ShopeeTreeNodeData>

  // the key of treeNode
  nodeKey: string

  // default expanded keys
  defaultExpandedKeys: Array<string | number>

  // whether accordion style
  accordion: boolean

  // default expand all
  defaultExpandAll: boolean

  // render after expand
  renderAfterExpand: boolean

  // auto expand all parent node when expand
  autoExpandParent: boolean

  // show tips when hover
  showOverflowTips: boolean

  // current node key
  currentNodeKey: string | number

  // renderContent function
  renderContent: (h: CreateElement, context: { node: ShopeeTreeNode; data: any; store: any }) => VNode;

  // props
  // props: object
}

export default Tree;
