import { ShopeeUIComponent, ShopeeUISize } from '../../types/common';
import { VNode } from 'vue';

type ShopeeModalSize = 'x-large' | 'large' | 'medium' | 'normal';

export class Modal extends ShopeeUIComponent {
  // content of modal
  content: string

  // title of modal
  title: string

  // subtitle of modal
  subtitle: string

  // size of modal
  size: ShopeeModalSize

  // custom width of modal
  width: number

  // class names of modal
  classNames: string[]

  // whether modal is visible
  visible: boolean

  // whether show cancel button in modal
  showCancel: boolean

  // whether show confirm button in modal
  showConfirm: boolean

  // whether show close icon in modal
  showClose: boolean

  // text in confirm button
  confirmText: string

  // text in cancel button
  cancelText: string

  // whether to use center style
  center: boolean

  // whether confirm button is disabled
  isConfirmDisabled: boolean

  // whether cancel button is disabled
  isCancelDisabled: boolean

  // whether confirm button is loading
  isConfirmLoading: boolean

  // whether cancel button is loading
  isCancelLoading: boolean

  // whether close modal when esc click
  closeOnEsc: boolean

  // whether close modal when mask click
  closeOnClickMask: boolean

  // whether close modal when route/hash change
  closeOnHashChange: boolean

  // whether emit close event when close icon clicked
  emitClose: boolean

  // whether append modal to body
  appendToBody: boolean

  // static instance function
  static $instance: ShopeeModal
}

export interface ShopeeModalConfig {
  content: string | VNode;
  footer?: VNode;
  header?: VNode;
  // the footer assist slot of modal
  footerAssist?: VNode;
  title?: string;
  subtitle?: string;
  size?: ShopeeModalSize;
  width?: number;
  classNames?: string[];
  showCancel?: boolean;
  showConfirm?: boolean;
  showClose?: boolean;
  confirmText?: string;
  cancelText?: string;
  center?: boolean;
  isConfirmDisabled?: boolean;
  isCancelDisabled?: boolean;
  isConfirmLoading?: boolean;
  isCancelLoading?: boolean;
  closeOnEsc?: boolean;
  closeOnClickMask?: boolean;
  closeOnHashChange?: boolean;
  // the milliseconds before the modal be closed auto
  autoClose?: number;
  emitClose?: boolean;
  // whether to activate the locked mode, the locked modal remains unchanged when calling remove api
  locked?: boolean;
  appendToBody?: boolean;
  onConfirm?: (instance: ShopeeModal) => (Promise<any> | boolean);
  onCancel?: (instance: ShopeeModal) => (Promise<any> | boolean);
  onClose?: () => void;
  onCreate?: (instance: ShopeeModal) => void;
}

export interface ShopeeModalShortcutMethod {
  (config: ShopeeModalConfig): Promise<Modal>
}

export interface ShopeeModalRemoveOptions {
  // whether includes the modal instance in locked mode
  includeLocked: boolean
}

export interface ShopeeModalRemoveMethod {
  (options: ShopeeModalRemoveOptions): void
}

export interface ShopeeModal extends ShopeeModalShortcutMethod {
  alarm: ShopeeModalShortcutMethod,
  confirm: ShopeeModalShortcutMethod,
  remove: ShopeeModalRemoveMethod
}

export default Modal;

declare module 'vue/types/vue' {
  interface Vue {
    $modal: ShopeeModal;
    $alarm: ShopeeModalShortcutMethod;
    $confirm: ShopeeModalShortcutMethod;
  }
}
