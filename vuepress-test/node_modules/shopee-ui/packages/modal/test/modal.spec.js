
import Vue from 'vue';
import ModalInstance from '../src/instance';

const vm = new Vue().$mount();
const modalInstance = ModalInstance.bind(vm);
modalInstance.alarm = ModalInstance.alarm.bind(vm);
modalInstance.confirm = ModalInstance.confirm.bind(vm);

describe('modal.vue', () => {
  if (!window.Promise) {
    window.Promise = require('es6-promise');
  }

  afterEach(() => {
    const el = document.querySelector('.shopee-modal__box');
    if (!el) {
      return;
    }
    if (el.parentNode) {
      el.parentNode.removeChild(el);
    }
  });

  it('should render correctly', done => {
    modalInstance({
      title: 'Modal',
      content: 'Modal Content'
    });

    setTimeout(() => {
      expect(document.querySelector('.shopee-modal__title').textContent).to.equal('Modal');
      expect(document.querySelector('.shopee-modal__body').textContent).to.equal('Modal Content');
      done();
    }, 100);
  });

  it('should close the alarm when confirm button clicked', done => {
    modalInstance.alarm({
      content: 'Alarm Content'
    });

    setTimeout(() => {
      document.querySelector('.shopee-button--primary').click();
      setTimeout(() => {
        should.not.exist(document.querySelector('.shopee-modal__box'));
        done();
      }, 300);
    }, 300);
  });

  it('should trigger onConfirm handler and not close the alarm modal when confirm button clicked', done => {
    let hasClicked = false;
    modalInstance.alarm({
      content: 'Alarm Content',
      onConfirm: () => {
        hasClicked = true;
      }
    });

    setTimeout(() => {
      document.querySelector('.shopee-modal__footer-buttons .shopee-button--primary').click();
      setTimeout(() => {
        expect(hasClicked).to.be.true;
        should.exist(document.querySelector('.shopee-modal__box'));
        done();
      }, 300);
    }, 300);
  });

  it('should close the confirm modal and trigger onCancel handler when cancel button clicked', done => {
    let hasClicked = false;
    modalInstance.confirm({
      content: 'Confirm Content',
      onCancel: () => {
        hasClicked = true;
      }
    });

    setTimeout(() => {
      document.querySelector('.shopee-modal__footer-buttons .shopee-button:first-child').click();
      setTimeout(() => {
        expect(hasClicked).to.be.true;
        should.not.exist(document.querySelector('.shopee-modal__box'));
        done();
      }, 300);
    }, 300);
  });

  it('should close the modal when modal mask clicked', done => {
    modalInstance.confirm({
      content: 'Confirm Content',
      closeOnClickMask: true
    });

    setTimeout(() => {
      document.querySelector('.shopee-modal__mask .shopee-modal__container').click();
      setTimeout(() => {
        should.not.exist(document.querySelector('.shopee-modal__box'));
        done();
      }, 300);
    }, 300);
  });

  it('should auto close the modal when set autoClose to 1000', done => {
    modalInstance({
      autoClose: 1000
    });
    setTimeout(() => {
      should.not.exist(document.querySelector('.shopee-modal__box'));
      done();
    }, 1500);
  });

  it('should render and closed correctly when onConfirm return a promise', done => {
    modalInstance({
      onConfirm() {
        return new Promise(resolve => {
          setTimeout(() => {
            resolve();
          }, 1000);
        });
      }
    });

    setTimeout(() => {
      document.querySelector('.shopee-button--primary').click();
      setTimeout(() => {
        expect(document.querySelector('.shopee-button--primary').classList.contains('loading')).to.be.true;
        setTimeout(() => {
          should.not.exist(document.querySelector('.shopee-modal__box'));
          done();
        }, 1500);
      }, 100);
    }, 300);
  });

  it('should render and closed correctly when open two modal instances', done => {
    modalInstance({
      onCreate() {
        modalInstance({});
      }
    });

    setTimeout(() => {
      let modalBoxes = document.querySelectorAll('.shopee-modal__box');
      expect(modalBoxes.length).to.equal(2);
      expect(modalBoxes[0].style.display).to.equal('none');
      expect(modalBoxes[1].style.display).to.equal('');
      modalBoxes[1].querySelector('.shopee-button--primary').click();
      setTimeout(() => {
        modalBoxes = document.querySelectorAll('.shopee-modal__box');
        expect(modalBoxes.length).to.equal(1);
        expect(modalBoxes[0].style.display).to.equal('');
        modalBoxes[0].querySelector('.shopee-button--primary').click();
        setTimeout(() => {
          should.not.exist(document.querySelector('.shopee-modal__box'));
          done();
        }, 300);
      }, 500);
    }, 500);
  });
});
