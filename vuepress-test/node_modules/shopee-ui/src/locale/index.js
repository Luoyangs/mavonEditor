import defaultLang from './lang/en';
export let currentLang = defaultLang;

const RE_NARGS = /(%|)\{([0-9a-zA-Z_]+)\}/g;
let languageMap = {};

/**
 * parse template by params
 * @param {string} string template string
 * @param {Object} args params of template
 * @return {string} result the result after parse
 */
function template(string, ...args) {
  if (args.length === 1 && typeof args[0] === 'object') {
    args = args[0];
  }

  if (!args || !args.hasOwnProperty) {
    args = {};
  }

  return string.replace(RE_NARGS, (match, prefix, i, index) => {
    let result;

    if (string[index - 1] === '{' &&
      string[index + match.length] === '}') {
      return i;
    } else {
      result = args.hasOwnProperty(i) ? args[i] : null;
      if (result === null || result === undefined) {
        return '';
      }

      return result;
    }
  });
}

/**
 * translate by transify key and params
 * @param {Object} lang lang config object
 * @param {string} path transify key
 * @param {Object} options params object
 * @return {string} the translation
 */
export const t = function (lang, path, options) {
  lang = lang || defaultLang;
  if (lang[path]) {
    return template(lang[path], options);
  }
  return '';
};

let listeners = [];

/**
 * add vue instance to listeners
 * @param {Object} vm
 */
export const register = function (vm) {
  for (let i = 0, l = listeners.length; i < l; i++) {
    if (listeners[i]._uid === vm._uid) {
      return;
    }
  }
  listeners.push(vm);
};

/**
 * remove vue instance from listeners
 * @param {Object} vm
 */
export const unregister = function (vm) {
  for (let i = 0, l = listeners.length; i < l; i++) {
    if (vm._uid === listeners[i]._uid) {
      listeners.splice(i, 1);
      break;
    }
  }
};

/**
 * change lang config
 * @param {Object} l lang config object
 */
export const locale = function (l) {
  if (typeof l === 'string') {
    l = languageMap[l];
  }
  currentLang = l || currentLang;
  listeners.forEach(listener => {
    // update _lang property of vue instance
    listener.$set(listener.$data, '_lang', currentLang);
    // force rerender vue instance
    listener.$forceUpdate();
  });
};

export const config = function (options = {}) {
  languageMap = options;
};

export default {
  config,
  locale,
  t,
  register,
  unregister,
  currentLang
};
