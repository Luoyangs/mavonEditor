import {
  noop,
  isObject,
  isFunction,
  isPromise,
  isRegExp,
  isVueInstance,
  isVNode,
  merge,
  mergeDeep,
  throttle,
  debounce
} from '../helper';
import Vue from 'vue';

describe('helper.js', () => {
  it('isObject', () => {
    let result = isObject({});
    expect(!!result).to.be.true;
    result = isObject(null);
    expect(!!result).to.be.false;
  });
  it('isFunction', () => {
    let fun = noop;
    let result = isFunction(fun);
    expect(!!result).to.be.true;
    result = isFunction(null);
    expect(!!result).to.be.false;
  });
  it('isPromise', () => {
    let promise = Promise.resolve();
    let result = isPromise(promise);
    expect(!!result).to.be.true;
    result = isPromise(null);
    expect(!!result).to.be.false;
  });
  it('isRegExp', () => {
    let reg = new RegExp();
    let result = isRegExp(reg);
    expect(!!result).to.be.true;
    result = isRegExp(null);
    expect(!!result).to.be.false;
  });
  it('isVueInstance', () => {
    const vm = new Vue();
    let result = isVueInstance(vm);
    expect(!!result).to.be.true;
    result = isVueInstance(null);
    expect(!!result).to.be.false;
  });
  it('isVNode', () => {
    const vm = new Vue();
    const vnode = vm.$createElement({
      render(h) {
        return h(<div></div>);
      }
    });
    let result = isVNode(vnode);
    expect(!!result).to.be.true;
    result = isVNode({});
    expect(!!result).to.be.false;
  });
  it('merge', () => {
    const obj = {test: 1};
    let result = merge({}, obj);
    expect(result).to.eql(obj);
  });
  it('mergeDeep', () => {
    const obj = {test: 1};
    let result = mergeDeep({}, obj);
    expect(result).to.eql(obj);
  });

  it('throttle', (done) => {
    let val = 1;
    const fn = throttle(() => {
      val += 1;
    },10);
    fn();
    fn();
    setTimeout(() => {
      expect(val).to.equal(2);
      done();
    },15);
  });
  it('debounce', (done) => {
    let val = 1;
    const fn = debounce(() => {
      val = 2;
    },10);
    fn();
    expect(val).to.eql(1);
    setTimeout(() => {
      expect(val).to.equal(2);
      done();
    },15);
  });
});
