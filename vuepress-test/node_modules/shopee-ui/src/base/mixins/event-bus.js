const broadcast = function(componentName, eventName, ...params) {
  let children = this.$children;
  children.forEach(child => {
    let name = child.$options.name;
    if (name === componentName) {
      child.$emit(eventName, ...params);
    } else {
      broadcast.call(child, componentName, eventName, ...params);
    }
  });
};

const dispatch = function (componentName, eventName, ...params) {
  let parent = this.$parent || this.$root;
  let name = parent.$options.name;
  while (parent && componentName !== name) {
    parent = parent.$parent;
    if (parent) {
      name = parent.$options.name;
    }
  }
  if (parent) {
    parent.$emit(eventName, ...params);
  }
};

export default {
  methods: {
    dispatch(componentName, eventName, ...params) {
      dispatch.call(this, componentName, eventName, ...params);
    },
    broadcast(componentName, eventName, ...params) {
      broadcast.call(this, componentName, eventName, ...params);
    }
  }
};
