import Vue from 'vue';
import { Popper as ShopeePopper } from '../index';
import { createElement, destroyInstance } from '@/test/utils';

ShopeePopper.install = function (Vue) {
  Vue.component(ShopeePopper.name, ShopeePopper);
};

Vue.use(ShopeePopper);

const defaultProps = {
  placement: 'bottom-start'
};

const createUpload = (props = {}) => {
  const vm = new Vue({
    template: `
      <div ref="popperRef">
        <shopee-popper ref="popper" v-bind="props">
          <div class="slot">popper</div>
        </shopee-popper>
      </div>`,
    data() {
      return {
        props: Object.assign({}, defaultProps, props)
      };
    }
  }).$mount(createElement());
  return vm.$refs.popper;
};

describe('popper.vue', () => {
  let vm;
  afterEach(() => {
    destroyInstance(vm);
  });

  it('should render correct', () => {
    vm = createUpload();
    expect(vm.$el.classList.contains('shopee-popper')).to.be.true;
  });

  it('should computedPopperRef correct', () => {
    vm = new Vue({
      template: `
        <div ref="popperRef">
          <shopee-popper ref="popper" v-bind="props">
            <div>popper</div>
          </shopee-popper>
        </div>`,
      data() {
        return {
          props: defaultProps
        };
      }
    }).$mount(createElement());
    expect(vm.$refs.popper.computedPopperRef).to.equal(vm.$refs.popperRef);
    destroyInstance(vm);
    const popperRef = () => {return true;};
    vm = new Vue({
      template: `
        <div ref="popperRef">
          <shopee-popper ref="popper" v-bind="props">
            <div>popper</div>
          </shopee-popper>
        </div>`,
      data() {
        return {
          props: Object.assign({}, defaultProps, {popperRef})
        };
      }
    }).$mount(createElement());
    expect(vm.$refs.popper.computedPopperRef).to.equal(true);
  });

  it('should isInModal correct', () => {
    vm = createUpload();
    expect(vm.isInModal).to.be.false;
  });

  it('should placementBehavior correct', () => {
    vm = createUpload({
      placement: 'top-end'
    });
    expect(vm.placementBehavior).to.eql(['top', 'bottom', 'right', 'left']);
  });

  it('should render slot correct', () => {
    vm = createUpload({});
    expect(vm.$el.style.display).to.equal('none');
    destroyInstance(vm);
    vm = createUpload({
      visible: true
    });
    expect(vm.$el.style.display).to.equal('');
  });

  it('should set visible correct', (done) => {
    vm = new Vue({
      template: `
        <div ref="popperRef">
          <shopee-popper ref="popper" :visible="visible" :placement="placement">
            <div>popper</div>
          </shopee-popper>
        </div>`,
      data() {
        return {
          visible: false,
          placement: 'bottom-start'
        };
      }
    }).$mount(createElement());
    const popper = vm.$refs.popper;
    vm.visible = true;
    setTimeout(() => {
      expect(popper.visible).to.be.true;
      expect(!!popper.popper).to.be.true;
      expect(popper.$el.style.display).to.equal('');
      vm.visible = false;
      setTimeout(() => {
        expect(popper.visible).to.be.false;
        expect(popper.$el.style.display).to.equal('none');
        done();
      },300);
    });
  });
});
